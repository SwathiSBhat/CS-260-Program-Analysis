struct st {
  f1:int
  f2:&int
}

fn1:&(&int) -> int
fn2:&(int) -> &int
fn3:&(int, &int) -> int
fn4:&(&st) -> int
fn5:&(&st, &int) -> &st

extern snk1:(int) -> _
extern snk2:(&int) -> _
extern snk3:(&&int) -> _
extern snk4:(&st) -> _
extern snk5:(int) -> _
extern snk6:(&int) -> _
extern snk7:(&&int) -> _
extern snk8:(&st) -> _
extern src1:() -> int
extern src10:(&st) -> int
extern src2:(&int) -> int
extern src3:(&&int) -> int
extern src4:(&int, &&int) -> int
extern src5:(&st) -> int
extern src6:() -> int
extern src7:(&int) -> int
extern src8:(&&int) -> int
extern src9:(&int, &&int) -> int

fn fn1(p:&int) -> int {
let _t1:int
entry:
  _t1 = $load p
  $ret _t1
}

fn fn2(p:int) -> &int {
let _t1:&int
entry:
  _t1 = $addrof p
  $ret _t1
}

fn fn3(p:int, q:&int) -> int {
let _t1:&int, _t2:int, _t3:int, _t4:int
bb1:
  _t2 = $load _t1
  _t3 = $call_dir fn1(q) then bb2

bb2:
  _t4 = $arith add _t2 _t3
  $ret _t4

entry:
  _t1 = $call_dir fn2(p) then bb1
}

fn fn4(p:&st) -> int {
let _t1:&&int, _t2:&int, _t3:int
bb1:
  $ret _t3

entry:
  _t1 = $gfp p f2
  _t2 = $load _t1
  _t3 = $call_dir fn1(_t2) then bb1
}

fn fn5(p:&st, q:&int) -> &st {
let _t1:&int, _t2:int
bb1:
  $store _t1 _t2
  $ret p

entry:
  _t1 = $gfp p f1
  _t2 = $call_dir fn1(q) then bb1
}

fn main() -> int {
let _ret122:int, _t1:&int, _t10:int, _t100:&int, _t101:&int, _t102:int, _t103:int, _t104:&st, _t105:&&int, _t106:int, _t107:int, _t108:int, _t109:&int, _t11:int, _t110:int, _t111:&st, _t112:&&int, _t113:&int, _t114:&int, _t115:int, _t116:int, _t117:&st, _t118:&&int, _t119:&int, _t12:&int, _t120:&int, _t121:int, _t13:int, _t14:&int, _t15:&int, _t16:int, _t17:&int, _t18:int, _t19:int, _t2:int, _t20:&int, _t21:int, _t22:&&int, _t23:&int, _t24:&int, _t25:&int, _t26:int, _t27:&st, _t28:int, _t29:&&int, _t3:&st, _t30:&int, _t31:int, _t32:int, _t33:&int, _t34:&st, _t35:&int, _t36:int, _t37:&&int, _t38:&int, _t39:&st, _t4:&&int, _t40:&int, _t41:&st, _t42:&int, _t43:int, _t44:&int, _t45:int, _t46:&int, _t47:int, _t48:&int, _t49:int, _t5:&int, _t50:&int, _t51:&int, _t52:int, _t53:int, _t54:int, _t55:&&int, _t56:&int, _t57:int, _t58:int, _t59:&&int, _t6:&&int, _t60:&int, _t61:int, _t62:&int, _t63:&int, _t64:&&int, _t65:&int, _t66:int, _t67:int, _t68:&int, _t69:int, _t7:&int, _t70:&&&st, _t71:&&st, _t72:&&st, _t73:&st, _t74:int, _t75:&&&int, _t76:&&int, _t77:&int, _t78:int, _t79:int, _t8:int, _t80:&&st, _t81:int, _t82:&st, _t83:&int, _t84:&int, _t85:&int, _t86:&st, _t87:&int, _t88:int, _t89:&int, _t9:&int, _t90:int, _t91:&int, _t92:int, _t93:&&int, _t94:&int, _t95:&int, _t96:int, _t97:&&st, _t98:&st, _t99:&&int, id0:&st, id1:&st, id10:int, id11:&int, id12:&st, id13:&&int, id14:&int, id15:&int, id16:int, id17:&int, id18:int, id19:&int, id2:int, id20:&&&int, id21:int, id22:&st, id23:&(int) -> &int, id24:int, id25:&st, id26:&st, id27:&&&st, id28:&&int, id29:&st, id3:&int, id30:&&st, id31:&(&st) -> int, id32:&(&st, &int) -> &st, id33:&(&int) -> int, id34:&(int) -> &int, id4:int, id5:&st, id6:int, id7:&(int) -> &int, id8:&int, id9:&int
bb1:
  _t50 = $addrof id4
  $call_dir fn3(5, _t50) then bb18

bb10:
  _t28 = $call_ext src5(_t27)
  _t29 = $gfp id12 f2
  _t30 = $load _t29
  _t31 = $call_dir fn1(_t30) then bb11

bb11:
  _t32 = $cmp lte _t28 _t31
  $store _t24 _t32
  _t33 = $call_dir fn2(id10) then bb12

bb12:
  _t34 = $call_dir fn5(id5, _t33) then bb13

bb13:
  _t35 = $addrof id6
  _t36 = $cmp neq _t35 id14
  _t37 = $gep id13 _t36
  _t38 = $load _t37
  _t39 = $call_dir fn5(_t34, _t38) then bb14

bb14:
  $call_ext snk4(_t39)
  $call_ext snk6(id15)
  _t40 = $addrof id16
  _t41 = $call_dir fn5(id12, _t40) then bb15

bb15:
  _t42 = $gfp _t41 f1
  _t43 = $load _t42
  _t44 = $call_dir fn2(_t43) then bb16

bb16:
  $call_ext snk2(_t44)
  _t45 = $call_dir fn3(id18, id15) then bb17

bb17:
  _t46 = $gep id17 _t45
  _t47 = $load _t46
  _t48 = $gep id15 _t47
  _t49 = $load _t48
  id10 = $copy _t49
  $jump bb1

bb18:
  _t51 = $gep id19 7
  _t52 = $load _t51
  _t53 = $load id19
  _t54 = $cmp eq _t52 _t53
  _t55 = $load id20
  _t56 = $load _t55
  _t57 = $call_dir fn3(_t54, _t56) then bb19

bb19:
  id16 = $copy _t57
  _t58 = $cmp neq id21 9
  $branch _t58 bb21 bb22

bb2:
  _t3 = $call_dir fn5(id0, id3) then bb4

bb20:
  _t91 = $addrof id2
  _t92 = $cmp eq id8 _t91
  $branch _t92 bb30 bb31

bb21:
  _t59 = $gfp id22 f2
  _t60 = $gep id15 id4
  _t61 = $load _t60
  _t62 = $call_idr id23(_t61) then bb23

bb22:
  id9 = $alloc 1 [_alloc3]
  id6 = $copy 5
  _t70 = $gep id27 7
  _t71 = $load _t70
  _t72 = $gep _t71 2
  _t73 = $load _t72
  _t74 = $call_ext src5(_t73)
  id16 = $copy _t74
  _t75 = $addrof id28
  _t76 = $load _t75
  $call_ext snk7(_t76)
  _t77 = $gfp id29 f1
  _t78 = $load _t77
  id3 = $alloc _t78 [_alloc4]
  id9 = $alloc 1 [_alloc5]
  _t79 = $call_ext src6()
  id24 = $copy _t79
  _t81 = $call_idr id31(id0) then bb26

bb23:
  $store _t59 _t62
  _t63 = $addrof id24
  $call_dir fn1(_t63) then bb24

bb24:
  $call_dir fn2(id6) then bb25

bb25:
  _t64 = $gfp id25 f2
  _t65 = $load _t64
  _t66 = $cmp neq _t65 id11
  _t67 = $arith div _t66 id10
  id3 = $alloc _t67 [_alloc1]
  _t68 = $gfp id26 f1
  _t69 = $load _t68
  id8 = $alloc _t69 [_alloc2]
  $call_ext src7(id11)
  $jump bb20

bb26:
  _t80 = $gep id30 _t81
  _t82 = $load _t80
  _t83 = $gfp _t82 f1
  _t84 = $call_dir fn2(id4) then bb27

bb27:
  _t85 = $addrof id24
  _t86 = $call_dir fn5(id12, _t85) then bb28

bb28:
  _t87 = $gfp _t86 f1
  _t88 = $load _t87
  _t89 = $gep _t84 _t88
  _t90 = $load _t89
  $store _t83 _t90
  _ret122 = $copy id16
  $jump exit

bb29:
  _ret122 = $copy 4
  $jump exit

bb3:
  _t19 = $call_dir fn4(id0) then bb8

bb30:
  _t93 = $gep id13 id10
  _t94 = $load _t93
  _t95 = $gep _t94 1
  _t96 = $load _t95
  _t97 = $gep id30 _t96
  _t98 = $load _t97
  $call_dir fn5(_t98, id19) then bb32

bb31:
  _t109 = $gep id11 2
  _t110 = $call_dir fn1(id9) then bb34

bb32:
  id15 = $alloc 1 [_alloc6]
  $call_ext src1()
  _t99 = $gfp id12 f2
  _t100 = $load _t99
  _t101 = $gep _t100 3
  _t102 = $load _t101
  _t103 = $call_dir fn3(_t102, id9) then bb33

bb33:
  id4 = $copy _t103
  _t104 = $load id30
  $call_ext src5(_t104)
  _t105 = $addrof id17
  _t106 = $call_ext src3(_t105)
  id16 = $copy _t106
  _t107 = $cmp neq id11 id3
  _t108 = $cmp lt id4 _t107
  id2 = $copy _t108
  $jump bb29

bb34:
  $store _t109 _t110
  $call_ext src3(id13)
  _t111 = $call_dir fn5(id0, id3) then bb35

bb35:
  _t112 = $gfp _t111 f2
  _t113 = $load _t112
  $call_ext snk6(_t113)
  _t114 = $gfp id26 f1
  _t115 = $load _t114
  $store id3 _t115
  $call_ext src10(id25)
  _t116 = $load id17
  _t117 = $call_idr id32(id22, id11) then bb36

bb36:
  _t118 = $gfp _t117 f2
  _t119 = $load _t118
  $call_dir fn3(_t116, _t119) then bb37

bb37:
  _t120 = $call_idr id34(id10) then bb38

bb38:
  _t121 = $call_idr id33(_t120) then bb39

bb39:
  _ret122 = $copy _t121
  $jump exit

bb4:
  _t4 = $gfp _t3 f2
  _t5 = $load _t4
  _t6 = $gfp id5 f2
  _t7 = $load _t6
  _t8 = $call_dir fn3(id4, _t7) then bb5

bb5:
  _t9 = $gep _t5 _t8
  _t10 = $load _t9
  id2 = $copy _t10
  _t11 = $load id8
  _t12 = $call_idr id7(_t11) then bb6

bb6:
  _t13 = $call_dir fn1(_t12) then bb7

bb7:
  id6 = $copy _t13
  _t14 = $gfp id0 f1
  _t15 = $gfp id5 f1
  _t16 = $load _t15
  _t17 = $gep id9 _t16
  _t18 = $load _t17
  $store _t14 _t18
  id10 = $copy 1
  $jump bb1

bb8:
  _t20 = $call_dir fn2(_t19) then bb9

bb9:
  _t21 = $load _t20
  id10 = $copy _t21
  _t22 = $gfp id5 f2
  _t23 = $load _t22
  _t25 = $gfp id5 f1
  _t26 = $load _t25
  _t24 = $gep _t23 _t26
  _t27 = $call_dir fn5(id0, id11) then bb10

entry:
  $call_ext src5(id0)
  _t1 = $gfp id1 f1
  _t2 = $load _t1
  $branch _t2 bb2 bb3

exit:
  $ret _ret122
}
