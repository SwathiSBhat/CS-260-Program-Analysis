struct st {
  f1:int
  f2:&int
}

test:&() -> int

fn main() -> int {
entry:
  $ret 0
}

fn test() -> int {
let _t1:&&&int, _t10:int, _t11:int, _t12:&int, _t13:int, _t14:int, _t15:&int, _t16:&&int, _t17:int, _t18:int, _t19:int, _t2:&&int, _t20:int, _t3:&&int, _t4:int, _t5:&int, _t6:&&int, _t7:&int, _t8:&&&&int, _t9:&&&int, id0:int, id1:int, id10:&int, id11:int, id12:&&int, id13:&int, id14:&int, id15:&int, id16:&&&int, id17:&&&int, id18:&&&&int, id19:int, id2:&int, id3:&int, id4:&int, id5:int, id6:int, id7:&&int, id8:&&&int, id9:&int
bb1:
  $branch 8 bb2 bb3

bb2:
  $jump bb4

bb3:
  id6 = $copy 8
  $ret 6

bb4:
  $branch id0 bb5 bb6

bb5:
  _t12 = $addrof id6
  _t13 = $cmp eq _t12 id4
  id5 = $copy _t13
  _t14 = $load id9
  _t15 = $alloc _t14 [_alloc1]
  $store id7 _t15
  id1 = $copy id11
  $store id9 8
  $jump bb4

bb6:
  id13 = $alloc 1 [_alloc2]
  _t16 = $alloc id1 [_alloc3]
  $store id8 _t16
  $jump bb7

bb7:
  _t17 = $cmp eq id15 id3
  $branch _t17 bb8 bb9

bb8:
  _t18 = $load id2
  id0 = $copy _t18
  id16 = $alloc 1 [_alloc4]
  _t19 = $load id15
  id6 = $copy _t19
  $store id13 id19
  $jump bb7

bb9:
  _t20 = $load id9
  id1 = $copy _t20
  $jump bb1

entry:
  id0 = $copy id0
  id2 = $copy id2
  id4 = $copy id2
  id3 = $copy id4
  id5 = $copy 5
  id6 = $copy id0
  id8 = $copy id8
  _t1 = $gep id8 1
  _t2 = $load _t1
  id7 = $copy _t2
  id9 = $copy id10
  _t3 = $addrof id9
  _t4 = $cmp eq id12 _t3
  id11 = $copy _t4
  _t5 = $addrof id1
  id14 = $copy _t5
  id13 = $copy id14
  _t6 = $gep id7 2
  _t7 = $load _t6
  id15 = $copy _t7
  id18 = $copy id18
  _t8 = $gep id18 id5
  _t9 = $load _t8
  id17 = $copy _t9
  id16 = $copy id17
  _t10 = $cmp gte 10 0
  id19 = $copy _t10
  _t11 = $cmp gte 8 id1
  id0 = $copy _t11
  id2 = $copy id3
  $jump bb1
}
