struct st {
  f1:int
  f2:&int
}

f1:&(int, &int) -> &int
f2:&(&st, &int) -> &st
f3:&(&int, &int) -> &st
g1:&st
g2:&int
g3:&int
test:&(int, &int) -> int

fn f1(p:int, q:&int) -> &int {
let _t1:int, _t2:&int, _t3:int, _t4:&&int, _t5:&int
bb1:
  p = $copy _t1
  _t2 = $gfp g1 f1
  _t3 = $load _t2
  $call_dir f1(_t3, g2) then bb2

bb2:
  _t4 = $gfp g1 f2
  _t5 = $load _t4
  $ret _t5

entry:
  _t1 = $call_dir test(p, g3) then bb1
}

fn f2(p:&st, q:&int) -> &st {
let _t1:&&&int, _t10:&&&int, _t11:&&int, _t12:&st, _t13:&&int, _t14:&int, _t15:&&&(&int, &int) -> &st, _t16:&&&(&int, &int) -> &st, _t17:&&(&int, &int) -> &st, _t18:&(&int, &int) -> &st, _t19:int, _t2:&&&int, _t20:&&int, _t21:&&(&int, &int) -> &st, _t22:&(&int, &int) -> &st, _t23:&&st, _t24:&st, _t25:&&&int, _t26:&&int, _t27:&&&int, _t28:&&int, _t29:&&(&st, &int) -> &st, _t3:&&int, _t30:&&&st, _t31:&&st, _t32:&&int, _t33:&int, _t34:&&int, _t35:&int, _t36:&int, _t37:&int, _t38:int, _t39:int, _t4:int, _t40:&&int, _t41:&int, _t42:&int, _t43:int, _t44:&int, _t45:int, _t46:&int, _t47:int, _t48:&int, _t49:int, _t5:int, _t50:int, _t51:&&int, _t52:&int, _t53:int, _t54:&int, _t55:&int, _t56:&int, _t57:&(int, &int) -> int, _t58:&int, _t59:int, _t6:&&&&&&int, _t60:&int, _t61:int, _t62:&int, _t63:&int, _t64:int, _t65:&&int, _t66:&int, _t67:&int, _t68:&int, _t69:&int, _t7:&&&&&int, _t70:&&(&st, &int) -> &st, _t71:&(&st, &int) -> &st, _t72:&int, _t73:int, _t74:int, _t75:&int, _t76:int, _t77:&int, _t78:int, _t79:int, _t8:&&&&int, _t80:int, _t81:int, _t82:&&st, _t83:&st, _t9:&&&int, id58:&&int, id59:&&&int, id60:&&&&int, id61:int, id62:int, id63:&int, id64:int, id65:int, id66:int, id67:&&int, id68:&&&int, id69:&&&&int, id70:&&&&&int, id71:&int, id72:&int, id73:&st, id74:int, id75:&int, id76:&(&int, &int) -> &st, id77:&&(&int, &int) -> &st, id78:&&&(&int, &int) -> &st, id79:&&&&(&int, &int) -> &st, id80:&int, id81:int, id82:&&int, id83:int, id84:&&int, id85:&&int, id86:&(&int, &int) -> &st, id87:&&(int, &int) -> int, id88:&st, id89:&&int, id90:&(&int, &int) -> &st, id91:&(int, &int) -> int, id92:&(&int, &int) -> &st, id93:&&int, id94:&&(&st, &int) -> &st, id95:&st, id96:&st, id97:&&&int, id98:&&st, id99:&&&st
bb1:
  id73 = $copy _t12
  _t13 = $gfp id73 f2
  _t14 = $load _t13
  id72 = $copy _t14
  id71 = $copy id72
  id74 = $copy id64
  id75 = $copy g3
  _t15 = $load id79
  id78 = $copy _t15
  _t16 = $gep id78 id62
  _t17 = $load _t16
  id77 = $copy _t17
  _t18 = $load id77
  id76 = $copy _t18
  id82 = $copy id67
  _t19 = $cmp lt 8 8
  id83 = $copy _t19
  _t20 = $addrof g3
  id85 = $copy _t20
  id84 = $copy id85
  _t21 = $gep id77 2
  _t22 = $load _t21
  id86 = $copy _t22
  id87 = $copy id87
  _t23 = $addrof id73
  _t24 = $load _t23
  id88 = $copy _t24
  _t25 = $gep id59 id74
  _t26 = $load _t25
  id89 = $copy _t26
  id90 = $copy id86
  id91 = $copy id91
  _t27 = $gep id59 5
  _t28 = $load _t27
  id93 = $copy _t28
  _t29 = $addrof f2
  id94 = $copy _t29
  id96 = $copy id88
  id95 = $copy id96
  id97 = $copy id68
  id99 = $copy id99
  _t30 = $gep id99 id74
  _t31 = $load _t30
  id98 = $copy _t31
  _t32 = $addrof q
  _t33 = $load _t32
  $call_dir f2(p, _t33) then bb2

bb10:
  _t48 = $addrof id81
  $call_idr id76(id80, _t48) then bb12

bb11:
  _t53 = $cmp neq 0 id61
  _t54 = $addrof id61
  _t55 = $call_dir f1(id64, _t54) then bb13

bb12:
  _t49 = $load id72
  id82 = $alloc _t49 [_alloc5]
  _t50 = $cmp eq 8 id81
  id64 = $copy _t50
  id83 = $copy id83
  _t51 = $gep id84 6
  _t52 = $load _t51
  id72 = $copy _t52
  $jump bb9

bb13:
  $call_dir test(_t53, _t55) then bb14

bb14:
  $jump bb4

bb15:
  _t72 = $gfp id96 f1
  _t73 = $load _t72
  $call_dir test(_t73, id80) then bb27

bb16:
  $call_idr id86(q, id71) then bb18

bb17:
  _t65 = $gep id89 id81
  _t66 = $load _t65
  $call_dir f1(id81, _t66) then bb23

bb18:
  _t56 = $load id82
  _t57 = $load id87
  $call_idr _t57(7, _t56) then bb19

bb19:
  _t58 = $gfp id88 f1
  _t59 = $call_dir test(2, id80) then bb20

bb2:
  _t34 = $gep id58 10
  _t35 = $load _t34
  _t36 = $addrof id61
  $call_dir f3(_t35, _t36) then bb3

bb20:
  $store _t58 _t59
  _t60 = $gep id80 id62
  _t61 = $load _t60
  _t62 = $load id89
  $call_dir f1(_t61, _t62) then bb21

bb21:
  _t63 = $gfp p f1
  _t64 = $load _t63
  id81 = $copy _t64
  $call_idr id90(g2, id72) then bb22

bb22:
  id63 = $copy id71
  $jump bb15

bb23:
  _t67 = $addrof id62
  $call_idr id91(id74, _t67) then bb24

bb24:
  g2 = $alloc 1 [_alloc6]
  _t68 = $load id93
  _t69 = $load id85
  $call_idr id92(_t68, _t69) then bb25

bb25:
  _t70 = $gep id94 7
  _t71 = $load _t70
  $call_idr _t71(id95, q) then bb26

bb26:
  $jump bb15

bb27:
  id80 = $copy g2
  _t74 = $call_dir test(2, g2) then bb28

bb28:
  $branch _t74 bb30 bb31

bb29:
  id61 = $copy id65
  $jump bb4

bb3:
  _t37 = $gep id63 id64
  _t38 = $load _t37
  id62 = $copy _t38
  _t39 = $cmp eq id65 id66
  $branch _t39 bb5 bb6

bb30:
  id87 = $copy id87
  _t75 = $call_dir f1(id61, id63) then bb32

bb31:
  $call_dir test(id74, g3) then bb34

bb32:
  g2 = $copy _t75
  _t76 = $cmp gte 4 8
  id83 = $copy _t76
  _t77 = $addrof id83
  _t78 = $call_dir test(8, _t77) then bb33

bb33:
  id83 = $copy _t78
  q = $alloc 1 [_alloc7]
  _t79 = $cmp neq 1 0
  g3 = $alloc _t79 [_alloc8]
  id63 = $alloc 1 [_alloc9]
  _t80 = $cmp eq id59 id97
  id64 = $copy _t80
  $jump bb29

bb34:
  _t81 = $call_dir test(6, g2) then bb35

bb35:
  id65 = $copy _t81
  $jump bb29

bb36:
  _t82 = $gep id98 id64
  _t83 = $load _t82
  $ret _t83

bb4:
  $call_dir f1(id81, id80) then bb36

bb5:
  _t40 = $gep id58 5
  _t41 = $load _t40
  _t42 = $load id67
  $call_dir f3(_t41, _t42) then bb7

bb6:
  $branch id62 bb16 bb17

bb7:
  id71 = $copy q
  _t43 = $call_dir test(1, q) then bb8

bb8:
  id66 = $copy _t43
  _t44 = $gep id63 id74
  _t45 = $load id75
  $store _t44 _t45
  $jump bb9

bb9:
  _t46 = $gfp g1 f1
  _t47 = $load _t46
  $branch _t47 bb10 bb11

entry:
  id60 = $copy id60
  _t1 = $load id60
  id59 = $copy _t1
  _t2 = $gep id59 8
  _t3 = $load _t2
  id58 = $copy _t3
  id61 = $copy 9
  _t4 = $load g2
  id62 = $copy _t4
  id63 = $copy g3
  id65 = $copy 9
  _t5 = $arith div 2 id64
  id66 = $copy _t5
  _t6 = $addrof id70
  _t7 = $load _t6
  id70 = $copy _t7
  _t8 = $load id70
  id69 = $copy _t8
  _t9 = $load id69
  id68 = $copy _t9
  _t10 = $gep id68 id61
  _t11 = $load _t10
  id67 = $copy _t11
  _t12 = $call_dir f3(q, id71) then bb1
}

fn f3(p:&int, q:&int) -> &st {
entry:
  $ret g1
}

fn main() -> int {
let _t1:&int, _t2:int, a:int, b:&int
bb1:
  $ret _t2

entry:
  a = $copy 42
  _t1 = $addrof a
  b = $copy _t1
  _t2 = $call_dir test(a, b) then bb1
}

fn test(p:int, q:&int) -> int {
let _lo1:int, _lo2:int, _t10:&&&(int, &int) -> &int, _t100:&int, _t101:&st, _t102:&int, _t103:int, _t104:&&int, _t105:&int, _t106:&&(&int, &int) -> &st, _t107:&(&int, &int) -> &st, _t108:&int, _t109:int, _t11:&&(int, &int) -> &int, _t12:&int, _t13:&int, _t14:&st, _t15:&int, _t16:int, _t17:&&&(&int, &int) -> &st, _t18:&&(&int, &int) -> &st, _t19:&int, _t20:int, _t21:&(int, &int) -> int, _t22:&&(int, &int) -> int, _t23:&(int, &int) -> int, _t24:int, _t25:&&&() -> int, _t26:&&() -> int, _t27:&&&() -> int, _t28:&&() -> int, _t29:&() -> int, _t3:&&&&&&&(int, &int) -> &int, _t30:&&() -> int, _t31:int, _t32:&&(&st, &int) -> &st, _t33:&&(int, &int) -> int, _t34:&&(int, &int) -> &int, _t35:&(int, &int) -> &int, _t36:&&&&&int, _t37:&&&&&int, _t38:&&&&int, _t39:&&&st, _t4:&&&&&&(int, &int) -> &int, _t40:&&st, _t41:&&st, _t42:&st, _t43:&&int, _t44:int, _t45:&int, _t46:int, _t47:int, _t48:&(int, &int) -> &int, _t49:int, _t5:&&&&&&&(int, &int) -> &int, _t50:int, _t51:&int, _t52:int, _t53:int, _t54:&&int, _t55:&int, _t56:&int, _t57:&int, _t58:&(&int, &int) -> &st, _t59:int, _t6:&&&&&&(int, &int) -> &int, _t60:&int, _t61:&int, _t62:&int, _t63:&int, _t64:int, _t65:int, _t66:int, _t67:&int, _t68:int, _t69:&&int, _t7:&&&&&(int, &int) -> &int, _t70:&int, _t71:&int, _t72:int, _t73:int, _t74:int, _t75:&int, _t76:int, _t77:&int, _t78:int, _t79:&&&(&st, &int) -> &st, _t8:&&&&(int, &int) -> &int, _t80:&&(&st, &int) -> &st, _t81:int, _t82:&int, _t83:&int, _t84:&int, _t85:int, _t86:&int, _t87:int, _t88:&&&int, _t89:&int, _t9:&&&(int, &int) -> &int, _t90:int, _t91:int, _t92:&int, _t93:&st, _t94:&int, _t95:&(&st, &int) -> &st, _t96:int, _t97:int, _t98:&int, _t99:&int, id0:&int, id1:&int, id10:&&&&&&&(int, &int) -> &int, id11:&int, id12:&int, id13:&int, id14:&st, id15:int, id16:&&int, id17:&&int, id18:&&(&int, &int) -> &st, id19:&(int, &int) -> int, id2:&&(int, &int) -> &int, id20:int, id21:&&int, id22:int, id23:&(int, &int) -> int, id24:&(int, &int) -> int, id25:&(int, &int) -> int, id26:&&(int, &int) -> int, id27:int, id28:&(int, &int) -> int, id29:&(int, &int) -> int, id3:&&&(int, &int) -> &int, id30:int, id31:&&() -> int, id32:&&() -> int, id33:&&() -> int, id34:&() -> int, id35:&&() -> int, id36:&&&() -> int, id37:int, id38:int, id39:&&(&st, &int) -> &st, id4:&&&(int, &int) -> &int, id40:&&(&st, &int) -> &st, id41:&&&(&st, &int) -> &st, id42:&&(int, &int) -> int, id43:&&(int, &int) -> int, id44:&&(int, &int) -> int, id45:&&&(int, &int) -> int, id46:&(int, &int) -> &int, id47:&&&&int, id48:&&&&&int, id49:&&&&&int, id5:&&&&(int, &int) -> &int, id50:&&&&&&int, id51:&st, id52:&st, id53:&&st, id54:&&(&st, &int) -> &st, id55:&(&int, &int) -> &st, id56:&&int, id57:&&int, id6:&&&&&(int, &int) -> &int, id7:&&&&&&(int, &int) -> &int, id8:&&&&&&(int, &int) -> &int, id9:&&&&&&&(int, &int) -> &int
bb1:
  id12 = $copy _t13
  id11 = $copy id12
  id13 = $copy id11
  _t14 = $call_dir f3(g2, g2) then bb2

bb10:
  $branch _t46 bb8 bb9

bb11:
  _t48 = $load id2
  $call_idr _t48(_lo1, id11) then bb13

bb12:
  _lo1 = $copy 10
  $jump bb11

bb13:
  _t49 = $load id12
  $call_dir f1(_t49, id13) then bb14

bb14:
  $jump bb4

bb15:
  $jump bb17

bb16:
  _lo2 = $copy p
  $jump bb15

bb17:
  $branch _lo2 bb18 bb19

bb18:
  _t51 = $gfp id14 f1
  _t52 = $load _t51
  p = $copy _t52
  _t53 = $call_dir test(p, g3) then bb20

bb19:
  id22 = $copy 8
  $jump bb34

bb2:
  id14 = $copy _t14
  _t15 = $gep g2 9
  _t16 = $load _t15
  id15 = $copy _t16
  id17 = $copy id16
  id16 = $copy id17
  _t17 = $addrof id18
  _t18 = $load _t17
  id18 = $copy _t18
  id20 = $copy 2
  _t19 = $gfp id14 f1
  _t20 = $load _t19
  id22 = $copy _t20
  id26 = $copy id26
  _t21 = $load id26
  id25 = $copy _t21
  id24 = $copy id25
  id23 = $copy id24
  id29 = $copy id24
  _t22 = $addrof id29
  _t23 = $load _t22
  id28 = $copy _t23
  _t24 = $call_idr id28(p, g2) then bb3

bb20:
  $store id12 _t53
  $branch id15 bb22 bb23

bb21:
  _lo2 = $copy p
  _t65 = $cmp neq _lo2 0
  $branch _t65 bb33 bb32

bb22:
  _t54 = $gep id16 2
  _t55 = $load _t54
  $call_dir f1(10, _t55) then bb24

bb23:
  _t61 = $addrof id15
  _t62 = $load id21
  $call_dir f3(_t61, _t62) then bb30

bb24:
  _t56 = $call_dir f1(7, id13) then bb25

bb25:
  _t57 = $call_dir f1(7, g2) then bb26

bb26:
  _t58 = $load id18
  $call_idr _t58(_t56, _t57) then bb27

bb27:
  _t59 = $load id0
  _t60 = $call_dir f1(id20, id11) then bb28

bb28:
  $call_idr id19(_t59, _t60) then bb29

bb29:
  $jump bb21

bb3:
  id27 = $copy _t24
  id32 = $copy id32
  _t25 = $addrof id32
  _t26 = $load _t25
  id31 = $copy _t26
  _t27 = $gep id36 id30
  _t28 = $load _t27
  id35 = $copy _t28
  _t29 = $load id35
  id34 = $copy _t29
  _t30 = $addrof id34
  id33 = $copy _t30
  _t31 = $arith mul id20 p
  id37 = $copy _t31
  id38 = $copy 10
  id41 = $copy id41
  _t32 = $load id41
  id40 = $copy _t32
  id39 = $copy id40
  id45 = $copy id45
  _t33 = $load id45
  id44 = $copy _t33
  id43 = $copy id44
  id42 = $copy id43
  _t34 = $gep id2 2
  _t35 = $load _t34
  id46 = $copy _t35
  id50 = $copy id50
  _t36 = $load id50
  id49 = $copy _t36
  id48 = $copy id49
  _t37 = $gep id48 3
  _t38 = $load _t37
  id47 = $copy _t38
  id51 = $copy id51
  _t39 = $addrof id53
  _t40 = $load _t39
  id53 = $copy _t40
  _t41 = $gep id53 8
  _t42 = $load _t41
  id52 = $copy _t42
  id54 = $copy id39
  _t43 = $addrof id1
  id57 = $copy _t43
  id56 = $copy id57
  $jump bb4

bb30:
  g2 = $alloc 0 [_alloc2]
  _t63 = $addrof id30
  _t64 = $call_idr id23(id27, _t63) then bb31

bb31:
  id22 = $copy _t64
  id31 = $copy id33
  id37 = $copy 1
  id37 = $copy 5
  p = $copy 5
  $jump bb21

bb32:
  $jump bb17

bb33:
  _lo2 = $copy p
  $jump bb32

bb34:
  _t66 = $call_idr id28(9, id11) then bb37

bb35:
  id38 = $copy id27
  $branch p bb39 bb40

bb36:
  _t86 = $gfp id51 f1
  _t87 = $load _t86
  _t88 = $alloc _t87 [_alloc4]
  $store id47 _t88
  _t89 = $gep q 2
  _t90 = $load _t89
  $branch _t90 bb50 bb51

bb37:
  $branch _t66 bb35 bb36

bb38:
  $branch 5 bb42 bb43

bb39:
  _t67 = $gfp g1 f1
  $store _t67 id27
  _t68 = $cmp neq g3 g3
  id22 = $copy _t68
  _t69 = $addrof g3
  _t70 = $load _t69
  id11 = $copy _t70
  $jump bb38

bb4:
  _t44 = $cmp neq id0 id0
  $branch _t44 bb5 bb6

bb40:
  _t71 = $gep id13 p
  _t72 = $load _t71
  id15 = $copy _t72
  id37 = $copy id27
  _t73 = $load id13
  id20 = $copy _t73
  $jump bb38

bb41:
  id22 = $copy 8
  _t77 = $addrof id20
  _t78 = $cmp neq g3 _t77
  $branch _t78 bb45 bb46

bb42:
  id30 = $copy id38
  _t74 = $cmp gte 5 6
  id37 = $copy _t74
  $jump bb41

bb43:
  _t75 = $gep q 0
  _t76 = $load _t75
  id20 = $copy _t76
  $jump bb41

bb44:
  _t84 = $gep id1 id38
  _t85 = $load _t84
  id38 = $copy _t85
  $store g2 id15
  $jump bb34

bb45:
  _t79 = $gep id41 4
  _t80 = $load _t79
  id39 = $copy _t80
  _t81 = $load q
  id22 = $copy _t81
  id42 = $alloc 2 [_alloc3]
  $jump bb36

bb46:
  _t82 = $addrof id27
  _t83 = $call_dir f1(10, _t82) then bb47

bb47:
  $call_idr id46(p, _t83) then bb48

bb48:
  $jump bb44

bb49:
  _t108 = $gep id0 p
  _t109 = $load _t108
  $ret _t109

bb5:
  $jump bb7

bb50:
  $jump bb52

bb51:
  _t93 = $call_dir f3(id12, id0) then bb55

bb52:
  _t91 = $arith add 6 id38
  $branch _t91 bb53 bb54

bb53:
  _t92 = $gfp id52 f1
  $store _t92 id22
  $jump bb52

bb54:
  $jump bb49

bb55:
  _t94 = $load id17
  _t95 = $load id54
  $call_idr _t95(_t93, _t94) then bb56

bb56:
  $jump bb57

bb57:
  _t96 = $call_dir test(id38, q) then bb60

bb58:
  _t97 = $load q
  id22 = $copy _t97
  _t98 = $load id56
  _t99 = $addrof id20
  _t100 = $call_dir f1(7, _t99) then bb61

bb59:
  _t101 = $load id53
  _t102 = $load id16
  $call_dir f2(_t101, _t102) then bb63

bb6:
  _lo2 = $copy p
  _t50 = $cmp neq _lo2 0
  $branch _t50 bb16 bb15

bb60:
  $branch _t96 bb58 bb59

bb61:
  $call_idr id55(_t98, _t100) then bb62

bb62:
  $jump bb57

bb63:
  _t103 = $call_dir test(id22, q) then bb64

bb64:
  $store id13 _t103
  _t104 = $gep id16 id20
  _t105 = $load _t104
  _t106 = $gep id18 0
  _t107 = $load _t106
  $call_idr _t107(_t105, id13) then bb65

bb65:
  $jump bb49

bb7:
  _t45 = $addrof p
  _t46 = $call_dir test(4, _t45) then bb10

bb8:
  id0 = $alloc 5 [_alloc1]
  $jump bb7

bb9:
  _lo1 = $copy p
  _t47 = $cmp neq _lo1 0
  $branch _t47 bb12 bb11

entry:
  id1 = $copy q
  id0 = $copy id1
  id10 = $copy id9
  id9 = $copy id10
  _t3 = $gep id9 p
  _t4 = $load _t3
  id8 = $copy _t4
  _t5 = $addrof id8
  _t6 = $load _t5
  id7 = $copy _t6
  _t7 = $load id7
  id6 = $copy _t7
  _t8 = $load id6
  id5 = $copy _t8
  _t9 = $load id5
  id4 = $copy _t9
  id3 = $copy id4
  _t10 = $gep id3 0
  _t11 = $load _t10
  id2 = $copy _t11
  _t12 = $addrof p
  _t13 = $call_dir f1(1, _t12) then bb1
}