struct st {
  f1:int
  f2:&int
}

fn1:&(&int) -> int
fn2:&(int) -> &int
fn3:&(int, &int) -> int
fn4:&(&st) -> int
fn5:&(&st, &int) -> &st

extern snk1:(int) -> _
extern snk2:(&int) -> _
extern snk3:(&&int) -> _
extern snk4:(&st) -> _
extern snk5:(int) -> _
extern snk6:(&int) -> _
extern snk7:(&&int) -> _
extern snk8:(&st) -> _
extern src1:() -> int
extern src10:(&st) -> int
extern src2:(&int) -> int
extern src3:(&&int) -> int
extern src4:(&int, &&int) -> int
extern src5:(&st) -> int
extern src6:() -> int
extern src7:(&int) -> int
extern src8:(&&int) -> int
extern src9:(&int, &&int) -> int

fn fn1(p:&int) -> int {
let _t1:int
entry:
  _t1 = $load p
  $ret _t1
}

fn fn2(p:int) -> &int {
let _t1:&int
entry:
  _t1 = $addrof p
  $ret _t1
}

fn fn3(p:int, q:&int) -> int {
let _t1:&int, _t2:int, _t3:int, _t4:int
bb1:
  _t2 = $load _t1
  _t3 = $call_dir fn1(q) then bb2

bb2:
  _t4 = $arith add _t2 _t3
  $ret _t4

entry:
  _t1 = $call_dir fn2(p) then bb1
}

fn fn4(p:&st) -> int {
let _t1:&&int, _t2:&int, _t3:int
bb1:
  $ret _t3

entry:
  _t1 = $gfp p f2
  _t2 = $load _t1
  _t3 = $call_dir fn1(_t2) then bb1
}

fn fn5(p:&st, q:&int) -> &st {
let _t1:&int, _t2:int
bb1:
  $store _t1 _t2
  $ret p

entry:
  _t1 = $gfp p f1
  _t2 = $call_dir fn1(q) then bb1
}

fn main() -> int {
let _t1:&int, _t10:&&st, _t11:&st, _t12:&int, _t13:&int, _t14:int, _t15:int, _t16:&&&&int, _t17:&&&int, _t18:int, _t19:&&&int, _t2:int, _t20:&&int, _t21:&&&&int, _t22:&&&int, _t23:&&int, _t24:&&int, _t25:&int, _t26:int, _t27:int, _t28:&&int, _t29:int, _t3:int, _t30:&&int, _t31:&int, _t32:int, _t33:int, _t34:int, _t35:&int, _t36:int, _t37:&&int, _t38:&st, _t39:&int, _t4:int, _t40:int, _t41:&st, _t42:&&int, _t43:&int, _t44:&int, _t45:int, _t46:&int, _t47:int, _t48:&st, _t49:&&(&st) -> int, _t5:int, _t50:&(&st) -> int, _t51:int, _t52:&int, _t53:&int, _t54:int, _t55:&&st, _t56:int, _t57:&st, _t58:&int, _t6:int, _t7:&&&st, _t8:&&st, _t9:int, id0:&int, id1:int, id10:&st, id11:&int, id12:int, id13:&int, id14:&&int, id15:&int, id16:&st, id17:int, id18:&int, id19:&&(&st) -> int, id2:&&&st, id20:int, id21:&int, id22:&int, id23:int, id24:&(int) -> &int, id25:int, id26:&&st, id27:&int, id3:int, id4:&(int, &int) -> int, id5:int, id6:&&&&int, id7:&st, id8:&&int, id9:&(&st) -> int
bb1:
  _t13 = $call_dir fn2(5) then bb5

bb10:
  $call_ext src6()
  id4 = $copy fn3
  id1 = $copy id5
  _t16 = $gep id6 2
  _t17 = $load _t16
  _t18 = $call_idr id4(id1, id0) then bb12

bb11:
  _t21 = $gep id6 4
  _t22 = $load _t21
  _t23 = $load _t22
  $call_ext src3(_t23)
  $jump bb9

bb12:
  _t19 = $gep _t17 _t18
  _t20 = $load _t19
  $call_ext snk3(_t20)
  id0 = $alloc 1 [_alloc1]
  $call_dir fn4(id7) then bb13

bb13:
  $jump bb9

bb14:
  id1 = $copy _t27
  _t28 = $addrof id0
  _t29 = $call_ext src3(_t28)
  id5 = $copy _t29
  $jump bb7

bb15:
  _t30 = $addrof id11
  _t31 = $load _t30
  _t32 = $cmp eq id0 _t31
  $branch _t32 bb16 bb17

bb16:
  _t33 = $call_ext src1()
  _t34 = $arith sub id12 _t33
  $branch _t34 bb19 bb18

bb17:
  _t56 = $cmp neq id27 id15
  _t55 = $gep id26 _t56
  _t57 = $load _t55
  _t58 = $gfp _t57 f1
  $store _t58 7
  $ret 8

bb18:
  $call_ext src6()
  _t46 = $call_dir fn2(1) then bb22

bb19:
  $call_ext snk1(id12)
  _t35 = $gep id11 10
  _t36 = $call_ext src2(id13)
  $store _t35 _t36
  _t38 = $call_dir fn5(id10, id15) then bb20

bb2:
  _t6 = $call_ext src6()
  _t7 = $gep id2 _t6
  _t8 = $load _t7
  _t9 = $call_dir fn1(id0) then bb3

bb20:
  _t39 = $gfp _t38 f1
  _t40 = $load _t39
  _t37 = $gep id14 _t40
  _t41 = $call_dir fn5(id16, id0) then bb21

bb21:
  _t42 = $gfp _t41 f2
  _t43 = $load _t42
  $store _t37 _t43
  _t44 = $gfp id10 f1
  _t45 = $load _t44
  id17 = $copy _t45
  $jump bb15

bb22:
  _t47 = $call_dir fn1(_t46) then bb23

bb23:
  $store id18 _t47
  $call_ext src1()
  $jump bb24

bb24:
  _t48 = $call_dir fn5(id10, id21) then bb27

bb25:
  id21 = $copy id22
  $jump bb24

bb26:
  _t52 = $call_idr id24(id25) then bb29

bb27:
  _t49 = $gep id19 id20
  _t50 = $load _t49
  _t51 = $call_idr _t50(_t48) then bb28

bb28:
  $branch _t51 bb25 bb26

bb29:
  _t53 = $load id8
  _t54 = $cmp eq _t52 _t53
  id23 = $copy _t54
  $jump bb15

bb3:
  _t10 = $gep _t8 _t9
  _t11 = $load _t10
  _t12 = $addrof id3
  $call_dir fn5(_t11, _t12) then bb4

bb4:
  $jump bb1

bb5:
  _t14 = $call_dir fn3(id3, _t13) then bb6

bb6:
  $branch _t14 bb8 bb7

bb7:
  $jump bb15

bb8:
  _t15 = $load id0
  $branch _t15 bb10 bb11

bb9:
  _t24 = $gep id8 3
  _t25 = $load _t24
  _t26 = $cmp neq id0 _t25
  $store id0 _t26
  _t27 = $call_idr id9(id10) then bb14

entry:
  _t1 = $addrof id1
  _t2 = $cmp neq id0 _t1
  _t3 = $call_ext src1()
  _t4 = $arith sub id1 _t3
  _t5 = $arith mul _t2 _t4
  $branch _t5 bb2 bb1
}