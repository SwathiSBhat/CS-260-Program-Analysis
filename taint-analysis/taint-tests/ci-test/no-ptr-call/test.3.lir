fn1:&(int) -> int
fn2:&(int, int) -> int
fn3:&(int, int, int) -> int
fn4:&(int) -> int

extern snk1:(int) -> _
extern snk2:(int) -> _
extern snk3:(int, int) -> _
extern snk4:(int, int) -> _
extern snk5:(int) -> _
extern snk6:(int) -> _
extern snk7:(int, int) -> _
extern snk8:(int, int) -> _
extern src1:() -> int
extern src2:() -> int
extern src3:() -> int
extern src4:() -> int
extern src5:() -> int
extern src6:() -> int
extern src7:() -> int
extern src8:() -> int

fn fn1(p:int) -> int {
entry:
  $ret p
}

fn fn2(p:int, q:int) -> int {
let _t1:int
entry:
  _t1 = $arith add p q
  $ret _t1
}

fn fn3(p:int, q:int, r:int) -> int {
let _ret1:int
bb2:
  _ret1 = $copy q
  $jump exit

bb3:
  _ret1 = $copy r
  $jump exit

entry:
  $branch p bb2 bb3

exit:
  $ret _ret1
}

fn fn4(p:int) -> int {
let _t1:int
entry:
  _t1 = $call_ext src8()
  $ret _t1
}

fn main() -> int {
let _lo1:int, _ret17:int, _t10:int, _t11:int, _t12:int, _t13:int, _t14:int, _t15:int, _t16:int, _t2:int, _t3:int, _t4:int, _t5:int, _t6:int, _t7:int, _t8:int, _t9:int, id0:int, id1:int, id2:int, id3:int, id4:int, id5:int, id6:int, id7:int
bb1:
  $call_ext snk6(_lo1)
  id0 = $copy id1
  $branch id0 bb5 bb6

bb10:
  $call_dir fn2(6, id3) then bb11

bb11:
  $jump bb7

bb12:
  $jump bb13

bb13:
  $branch 9 bb14 bb15

bb14:
  $jump bb16

bb15:
  _ret17 = $copy id7
  $jump exit

bb16:
  $branch id4 bb17 bb18

bb17:
  id1 = $copy id5
  id1 = $copy id3
  id7 = $copy 2
  id7 = $copy id5
  _t6 = $call_ext src4()
  id7 = $copy _t6
  $jump bb16

bb18:
  $call_ext src6()
  $branch 10 bb20 bb21

bb19:
  _t13 = $call_ext src7()
  $branch _t13 bb26 bb27

bb2:
  _t4 = $call_dir fn3(2, 1, id0) then bb3

bb20:
  id7 = $copy id4
  _t7 = $call_dir fn1(10) then bb22

bb21:
  id6 = $copy 5
  id4 = $copy 10
  _t9 = $call_dir fn4(id2) then bb23

bb22:
  _t8 = $cmp gt _t7 id0
  id0 = $copy _t8
  $jump bb19

bb23:
  id1 = $copy _t9
  id2 = $copy id4
  id0 = $copy id0
  _t10 = $call_ext src2()
  _t11 = $cmp lte id1 0
  _t12 = $call_dir fn3(_t10, _t11, 2) then bb24

bb24:
  _ret17 = $copy _t12
  $jump exit

bb25:
  $jump bb13

bb26:
  $call_ext src2()
  _t14 = $call_dir fn1(id0) then bb28

bb27:
  id2 = $copy id2
  $call_ext snk8(id7, 4)
  $jump bb25

bb28:
  $call_ext snk5(_t14)
  _t15 = $call_dir fn3(2, 3, 8) then bb29

bb29:
  _t16 = $call_dir fn1(_t15) then bb30

bb3:
  _lo1 = $copy _t4
  $jump bb1

bb30:
  $call_ext snk2(_t16)
  id5 = $copy id3
  id1 = $copy id4
  $jump bb25

bb4:
  $call_dir fn4(7) then bb12

bb5:
  id0 = $copy 3
  id2 = $copy 3
  $jump bb4

bb6:
  $branch 1 bb8 bb9

bb7:
  $jump bb4

bb8:
  id3 = $copy 2
  id4 = $copy 2
  id0 = $copy id5
  id6 = $copy id3
  $jump bb7

bb9:
  id7 = $copy id7
  $call_ext src4()
  $call_ext src6()
  _t5 = $call_ext src4()
  $call_dir fn3(_t5, id4, id5) then bb10

entry:
  _t2 = $call_ext src2()
  _lo1 = $copy _t2
  _t3 = $cmp eq _lo1 0
  $branch _t3 bb2 bb1

exit:
  $ret _ret17
}