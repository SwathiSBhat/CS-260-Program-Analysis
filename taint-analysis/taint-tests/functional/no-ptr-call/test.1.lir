fn1:&(int) -> int
fn2:&(int, int) -> int
fn3:&(int, int, int) -> int
fn4:&(int) -> int

extern snk1:(int) -> _
extern snk2:(int) -> _
extern snk3:(int, int) -> _
extern snk4:(int, int) -> _
extern snk5:(int) -> _
extern snk6:(int) -> _
extern snk7:(int, int) -> _
extern snk8:(int, int) -> _
extern src1:() -> int
extern src2:() -> int
extern src3:() -> int
extern src4:() -> int
extern src5:() -> int
extern src6:() -> int
extern src7:() -> int
extern src8:() -> int

fn fn1(p:int) -> int {
let _t1:int
bb1:
  $ret _t1

entry:
  _t1 = $call_dir fn4(p) then bb1
}

fn fn2(p:int, q:int) -> int {
let _t1:int
entry:
  _t1 = $arith add p q
  $ret _t1
}

fn fn3(p:int, q:int, r:int) -> int {
let _t1:int, _t2:int, _t3:int
bb1:
  _t2 = $call_dir fn4(r) then bb2

bb2:
  _t3 = $arith add _t1 _t2
  $ret _t3

entry:
  _t1 = $call_dir fn2(p, q) then bb1
}

fn fn4(p:int) -> int {
entry:
  $ret p
}

fn main() -> int {
let _t1:int, _t10:int, _t11:int, _t12:int, _t13:int, _t14:int, _t15:int, _t16:int, _t2:int, _t3:int, _t4:int, _t5:int, _t6:int, _t7:int, _t8:int, _t9:int, id0:int, id1:int, id2:int, id3:int, id4:int, id5:int, id6:int, id7:int
bb1:
  id0 = $copy _t1
  id0 = $copy id0
  id1 = $copy id1
  _t2 = $call_ext src8()
  $call_dir fn4(_t2) then bb2

bb10:
  id3 = $copy 9
  id1 = $copy id3
  id1 = $copy id2
  _t8 = $call_ext src7()
  id5 = $copy _t8
  $jump bb8

bb11:
  $call_ext src1()
  $jump bb3

bb12:
  id6 = $copy id7
  id4 = $copy id5
  $jump bb11

bb13:
  _t9 = $call_dir fn4(id5) then bb14

bb14:
  id6 = $copy _t9
  _t10 = $call_ext src6()
  id7 = $copy _t10
  $jump bb11

bb15:
  $jump bb16

bb16:
  _t11 = $call_dir fn2(5, id4) then bb19

bb17:
  id7 = $copy 4
  $branch 4 bb21 bb22

bb18:
  _t16 = $call_dir fn2(id3, 5) then bb31

bb19:
  $branch _t11 bb17 bb18

bb2:
  $branch 5 bb4 bb5

bb20:
  $jump bb24

bb21:
  id6 = $copy 2
  id1 = $copy 1
  $call_dir fn4(1) then bb23

bb22:
  id5 = $copy 8
  $jump bb20

bb23:
  $call_ext snk3(7, id6)
  $jump bb20

bb24:
  _t12 = $call_ext src6()
  $branch _t12 bb25 bb26

bb25:
  _t13 = $call_dir fn4(4) then bb27

bb26:
  _t14 = $call_ext src4()
  _t15 = $cmp lt 8 _t14
  $call_ext snk4(id6, _t15)
  id0 = $copy id6
  $jump bb28

bb27:
  id6 = $copy _t13
  $jump bb24

bb28:
  $branch 10 bb29 bb30

bb29:
  id6 = $copy id6
  $jump bb28

bb3:
  id0 = $copy 1
  $call_dir fn4(id7) then bb15

bb30:
  $jump bb16

bb31:
  $ret _t16

bb4:
  id2 = $copy 8
  _t3 = $call_ext src1()
  _t4 = $cmp lt _t3 id4
  _t5 = $call_dir fn2(id3, _t4) then bb6

bb5:
  id5 = $copy id6
  $branch 3 bb9 bb10

bb6:
  id3 = $copy _t5
  id2 = $copy id0
  _t6 = $call_dir fn2(10, 6) then bb7

bb7:
  id2 = $copy _t6
  id4 = $copy 10
  $jump bb3

bb8:
  $branch 6 bb12 bb13

bb9:
  id1 = $copy id6
  id0 = $copy 2
  id7 = $copy id0
  _t7 = $arith div id0 4
  id6 = $copy _t7
  $jump bb8

entry:
  _t1 = $call_dir fn4(5) then bb1
}