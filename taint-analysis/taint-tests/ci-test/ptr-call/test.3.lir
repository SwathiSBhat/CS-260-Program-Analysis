struct st {
  f1:int
  f2:&int
}

fn1:&(&int) -> int
fn2:&(int) -> &int
fn3:&(int, &int) -> int
fn4:&(&st) -> int
fn5:&(&st, &int) -> &st

extern snk1:(int) -> _
extern snk2:(&int) -> _
extern snk3:(&&int) -> _
extern snk4:(&st) -> _
extern snk5:(int) -> _
extern snk6:(&int) -> _
extern snk7:(&&int) -> _
extern snk8:(&st) -> _
extern src1:() -> int
extern src10:(&st) -> int
extern src2:(&int) -> int
extern src3:(&&int) -> int
extern src4:(&int, &&int) -> int
extern src5:(&st) -> int
extern src6:() -> int
extern src7:(&int) -> int
extern src8:(&&int) -> int
extern src9:(&int, &&int) -> int

fn fn1(p:&int) -> int {
let _t1:int
entry:
  _t1 = $load p
  $ret _t1
}

fn fn2(p:int) -> &int {
let _t1:&int
entry:
  _t1 = $addrof p
  $ret _t1
}

fn fn3(p:int, q:&int) -> int {
let _t1:&int, _t2:int, _t3:int, _t4:int
bb1:
  _t2 = $load _t1
  _t3 = $call_dir fn1(q) then bb2

bb2:
  _t4 = $arith add _t2 _t3
  $ret _t4

entry:
  _t1 = $call_dir fn2(p) then bb1
}

fn fn4(p:&st) -> int {
let _t1:&&int, _t2:&int, _t3:int
bb1:
  $ret _t3

entry:
  _t1 = $gfp p f2
  _t2 = $load _t1
  _t3 = $call_dir fn1(_t2) then bb1
}

fn fn5(p:&st, q:&int) -> &st {
let _t1:&int, _t2:int
bb1:
  $store _t1 _t2
  $ret p

entry:
  _t1 = $gfp p f1
  _t2 = $call_dir fn1(q) then bb1
}

fn main() -> int {
let _t1:int, _t10:&int, _t100:int, _t101:&int, _t102:&int, _t103:int, _t11:&int, _t12:int, _t13:&&st, _t14:&st, _t15:&int, _t16:&&&int, _t17:&&int, _t18:&int, _t19:&&st, _t2:int, _t20:&st, _t21:&&int, _t22:&int, _t23:int, _t24:&&int, _t25:&int, _t26:&&int, _t27:&int, _t28:&int, _t29:int, _t3:&&st, _t30:&int, _t31:int, _t32:&int, _t33:&&(&st, &int) -> &st, _t34:&(&st, &int) -> &st, _t35:&st, _t36:&int, _t37:int, _t38:&&st, _t39:int, _t4:&st, _t40:&st, _t41:&int, _t42:&st, _t43:&&int, _t44:&int, _t45:&st, _t46:&int, _t47:&&int, _t48:&int, _t49:&int, _t5:int, _t50:int, _t51:int, _t52:int, _t53:int, _t54:int, _t55:&int, _t56:int, _t57:&&&&int, _t58:&&&int, _t59:&int, _t6:&int, _t60:int, _t61:&&&int, _t62:&&int, _t63:&&int, _t64:&int, _t65:&&st, _t66:&st, _t67:&&int, _t68:&int, _t69:&int, _t7:&st, _t70:&&(&st, &int) -> &st, _t71:&(&st, &int) -> &st, _t72:&st, _t73:&st, _t74:&st, _t75:&&int, _t76:&int, _t77:int, _t78:&int, _t79:int, _t8:&int, _t80:&&&&&int, _t81:&&&&int, _t82:&int, _t83:int, _t84:&&&&int, _t85:&&&int, _t86:&&&int, _t87:&&int, _t88:int, _t89:&&(int) -> &int, _t9:int, _t90:&(int) -> &int, _t91:&&&int, _t92:&&int, _t93:&&int, _t94:int, _t95:&int, _t96:int, _t97:&&&int, _t98:&&int, _t99:&int, id0:&int, id1:int, id10:int, id11:&&&int, id12:int, id13:&&int, id14:&st, id15:&int, id16:&st, id17:&&(&st, &int) -> &st, id18:&st, id19:int, id2:&&st, id20:&(&st, &int) -> &st, id21:&st, id22:&st, id23:int, id24:int, id25:&st, id26:&&&&int, id27:&&int, id28:&(&st) -> int, id29:&int, id3:int, id30:&(int, &int) -> int, id31:&int, id32:&int, id33:&&&&&int, id34:&int, id35:&&(int) -> &int, id36:&(int, &int) -> int, id37:&&&int, id38:&int, id4:&st, id5:&(&st, &int) -> &st, id6:&(&int) -> int, id7:&&int, id8:int, id9:&int
bb1:
  $jump bb2

bb10:
  $branch id10 bb11 bb12

bb11:
  _t26 = $gfp id14 f2
  _t27 = $load _t26
  _t28 = $gep _t27 0
  _t29 = $load _t28
  id12 = $copy _t29
  $call_dir fn5(id4, id15) then bb13

bb12:
  $branch id1 bb19 bb20

bb13:
  _t31 = $call_ext src5(id16)
  _t30 = $gep id0 _t31
  _t32 = $addrof id19
  _t33 = $gep id17 id8
  _t34 = $load _t33
  _t35 = $call_idr _t34(id18, _t32) then bb14

bb14:
  _t36 = $gfp _t35 f1
  _t37 = $load _t36
  $store _t30 _t37
  _t39 = $cmp eq id9 id0
  _t38 = $gep id2 _t39
  _t40 = $load _t38
  _t41 = $gfp _t40 f1
  $store _t41 0
  _t42 = $call_dir fn5(id22, id0) then bb15

bb15:
  _t43 = $gfp _t42 f2
  _t44 = $load _t43
  _t45 = $call_dir fn5(id21, _t44) then bb16

bb16:
  _t46 = $addrof id23
  $call_idr id20(_t45, _t46) then bb17

bb17:
  id8 = $copy 2
  $call_ext src6()
  $jump bb10

bb18:
  _t91 = $gep id11 id19
  _t92 = $load _t91
  _t93 = $gep _t92 8
  _t94 = $cmp neq id0 id9
  _t95 = $call_dir fn2(_t94) then bb31

bb19:
  _t47 = $load id11
  $call_ext snk7(_t47)
  _t48 = $addrof id1
  _t49 = $addrof id19
  _t50 = $cmp eq _t48 _t49
  _t51 = $call_dir fn3(_t50, id9) then bb21

bb2:
  $branch id1 bb3 bb4

bb20:
  _t69 = $call_dir fn2(0) then bb24

bb21:
  _t52 = $cmp eq 6 id8
  _t53 = $arith div _t52 9
  _t54 = $cmp lt _t51 _t53
  $call_ext snk1(_t54)
  _t55 = $gfp id25 f1
  _t56 = $load _t55
  id24 = $copy _t56
  _t57 = $gep id26 id23
  _t58 = $load _t57
  _t59 = $gep id0 id12
  _t60 = $load _t59
  _t61 = $gep _t58 _t60
  _t62 = $load _t61
  _t63 = $gep _t62 id8
  _t64 = $load _t63
  id0 = $copy _t64
  id23 = $copy id24
  _t65 = $gep id2 id10
  _t66 = $load _t65
  $call_dir fn4(_t66) then bb22

bb22:
  _t67 = $gep id27 id23
  _t68 = $load _t67
  $call_idr id20(id21, _t68) then bb23

bb23:
  $jump bb18

bb24:
  _t70 = $gep id17 8
  _t71 = $load _t70
  _t72 = $call_idr _t71(id25, _t69) then bb25

bb25:
  _t73 = $call_dir fn5(_t72, id29) then bb26

bb26:
  $call_idr id28(_t73) then bb27

bb27:
  _t74 = $call_dir fn5(id4, id31) then bb28

bb28:
  _t75 = $gfp _t74 f2
  _t76 = $load _t75
  _t77 = $cmp neq _t76 id15
  _t78 = $addrof id12
  $call_idr id30(_t77, _t78) then bb29

bb29:
  id32 = $copy id29
  _t79 = $call_ext src6()
  _t80 = $gep id33 _t79
  _t81 = $load _t80
  _t82 = $gep id34 id3
  _t83 = $load _t82
  _t84 = $gep _t81 _t83
  _t85 = $load _t84
  _t86 = $gep _t85 7
  _t87 = $load _t86
  $call_ext snk3(_t87)
  id19 = $copy id3
  _t88 = $load id34
  _t89 = $gep id35 1
  _t90 = $load _t89
  $call_idr _t90(_t88) then bb30

bb3:
  _t1 = $call_ext src6()
  _t2 = $arith mul id3 _t1
  _t3 = $gep id2 _t2
  _t4 = $load _t3
  _t5 = $call_ext src5(id4)
  _t6 = $call_dir fn2(_t5) then bb5

bb30:
  $jump bb18

bb31:
  $store _t93 _t95
  _t96 = $load id38
  _t97 = $gep id37 _t96
  _t98 = $load _t97
  _t99 = $load _t98
  $call_idr id36(id3, _t99) then bb32

bb32:
  _t100 = $load id15
  _t101 = $call_dir fn2(_t100) then bb33

bb33:
  _t102 = $gep _t101 1
  _t103 = $load _t102
  $ret _t103

bb4:
  _t24 = $gep id13 7
  _t25 = $alloc 1 [_alloc2]
  $store _t24 _t25
  $jump bb10

bb5:
  _t7 = $call_dir fn5(_t4, _t6) then bb6

bb6:
  $call_ext snk4(_t7)
  _t8 = $call_dir fn2(id1) then bb7

bb7:
  _t9 = $load _t8
  id1 = $copy _t9
  _t10 = $gfp id4 f1
  $store _t10 id1
  _t11 = $load id7
  _t12 = $call_idr id6(_t11) then bb8

bb8:
  _t13 = $gep id2 _t12
  _t14 = $load _t13
  _t15 = $addrof id8
  $call_idr id5(_t14, _t15) then bb9

bb9:
  id9 = $alloc 1 [_alloc1]
  id3 = $copy 6
  _t16 = $gep id11 id12
  _t17 = $load _t16
  _t18 = $load _t17
  _t19 = $gep id2 10
  _t20 = $load _t19
  _t21 = $gfp _t20 f2
  _t22 = $load _t21
  _t23 = $cmp neq _t18 _t22
  id10 = $copy _t23
  $jump bb2

entry:
  $call_dir fn1(id0) then bb1
}