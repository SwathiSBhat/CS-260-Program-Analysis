fn1:&(int) -> int
fn2:&(int, int) -> int
fn3:&(int, int, int) -> int
fn4:&(int) -> int

extern snk1:(int) -> _
extern snk2:(int) -> _
extern snk3:(int, int) -> _
extern snk4:(int, int) -> _
extern snk5:(int) -> _
extern snk6:(int) -> _
extern snk7:(int, int) -> _
extern snk8:(int, int) -> _
extern src1:() -> int
extern src2:() -> int
extern src3:() -> int
extern src4:() -> int
extern src5:() -> int
extern src6:() -> int
extern src7:() -> int
extern src8:() -> int

fn fn1(p:int) -> int {
entry:
  $ret p
}

fn fn2(p:int, q:int) -> int {
let _t1:int
entry:
  _t1 = $arith add p q
  $ret _t1
}

fn fn3(p:int, q:int, r:int) -> int {
let _ret1:int
bb2:
  _ret1 = $copy q
  $jump exit

bb3:
  _ret1 = $copy r
  $jump exit

entry:
  $branch p bb2 bb3

exit:
  $ret _ret1
}

fn fn4(p:int) -> int {
let _t1:int
entry:
  _t1 = $call_ext src8()
  $ret _t1
}

fn main() -> int {
let _ret15:int, _t1:int, _t10:int, _t11:int, _t12:int, _t13:int, _t14:int, _t2:int, _t3:int, _t4:int, _t5:int, _t6:int, _t7:int, _t8:int, _t9:int, id0:int, id1:int, id2:int, id3:int, id4:int, id5:int, id6:int, id7:int
bb1:
  $jump bb4

bb10:
  id7 = $copy _t2
  $jump bb7

bb11:
  _t6 = $call_ext src2()
  $branch _t6 bb12 bb13

bb12:
  id4 = $copy id7
  $jump bb11

bb13:
  id1 = $copy 8
  $call_ext snk8(9, 6)
  $jump bb14

bb14:
  $branch 8 bb15 bb16

bb15:
  id3 = $copy id3
  id3 = $copy 8
  _t7 = $call_ext src5()
  id2 = $copy _t7
  _t8 = $call_ext src5()
  $call_ext snk5(_t8)
  $jump bb14

bb16:
  $jump bb4

bb17:
  _t13 = $call_ext src5()
  _t14 = $arith div _t13 5
  _ret15 = $copy _t14
  $jump exit

bb18:
  $branch 9 bb21 bb20

bb19:
  $jump bb24

bb2:
  $call_dir fn2(4, id0) then bb3

bb20:
  id3 = $copy id6
  id3 = $copy 2
  id6 = $copy 10
  _ret15 = $copy 4
  $jump exit

bb21:
  id0 = $copy 3
  id3 = $copy id5
  id0 = $copy 1
  $call_dir fn3(3, id5, 0) then bb22

bb22:
  $call_dir fn2(2, id5) then bb23

bb23:
  $jump bb20

bb24:
  $branch 3 bb25 bb26

bb25:
  _t9 = $call_ext src1()
  id0 = $copy _t9
  id6 = $copy 9
  $jump bb24

bb26:
  $branch id3 bb28 bb29

bb27:
  $jump bb17

bb28:
  _t10 = $call_ext src6()
  _t11 = $call_dir fn1(1) then bb30

bb29:
  _t12 = $call_dir fn4(4) then bb31

bb3:
  $jump bb1

bb30:
  $call_ext snk7(_t10, _t11)
  id2 = $copy id4
  $jump bb27

bb31:
  $call_ext snk1(_t12)
  id1 = $copy id6
  _ret15 = $copy 5
  $jump exit

bb4:
  $branch id1 bb5 bb6

bb5:
  id1 = $copy 7
  $branch id2 bb8 bb9

bb6:
  id2 = $copy id7
  $branch 5 bb18 bb19

bb7:
  $jump bb11

bb8:
  _t1 = $arith add id1 9
  id3 = $copy _t1
  id4 = $copy 7
  id5 = $copy id1
  id6 = $copy 9
  _t2 = $call_dir fn1(id7) then bb10

bb9:
  _t3 = $call_ext src1()
  _t4 = $call_ext src2()
  _t5 = $arith add _t3 _t4
  id4 = $copy _t5
  $call_ext src4()
  $jump bb7

entry:
  $branch id0 bb1 bb2

exit:
  $ret _ret15
}