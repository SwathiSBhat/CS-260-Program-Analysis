fn1:&(int) -> int
fn2:&(int, int) -> int
fn3:&(int, int, int) -> int
fn4:&(int) -> int

extern snk1:(int) -> _
extern snk2:(int) -> _
extern snk3:(int, int) -> _
extern snk4:(int, int) -> _
extern snk5:(int) -> _
extern snk6:(int) -> _
extern snk7:(int, int) -> _
extern snk8:(int, int) -> _
extern src1:() -> int
extern src2:() -> int
extern src3:() -> int
extern src4:() -> int
extern src5:() -> int
extern src6:() -> int
extern src7:() -> int
extern src8:() -> int

fn fn1(p:int) -> int {
let _t1:int
bb1:
  $ret _t1

entry:
  _t1 = $call_dir fn4(p) then bb1
}

fn fn2(p:int, q:int) -> int {
let _t1:int
entry:
  _t1 = $arith add p q
  $ret _t1
}

fn fn3(p:int, q:int, r:int) -> int {
let _t1:int, _t2:int, _t3:int
bb1:
  _t2 = $call_dir fn4(r) then bb2

bb2:
  _t3 = $arith add _t1 _t2
  $ret _t3

entry:
  _t1 = $call_dir fn2(p, q) then bb1
}

fn fn4(p:int) -> int {
entry:
  $ret p
}

fn main() -> int {
let _lo1:int, _lo2:int, _ret25:int, _t10:int, _t11:int, _t12:int, _t13:int, _t14:int, _t15:int, _t16:int, _t17:int, _t18:int, _t19:int, _t20:int, _t21:int, _t22:int, _t23:int, _t24:int, _t3:int, _t4:int, _t5:int, _t6:int, _t7:int, _t8:int, _t9:int, id0:int, id1:int, id2:int, id3:int, id4:int, id5:int, id6:int, id7:int
bb1:
  $branch 7 bb2 bb3

bb10:
  _t13 = $call_dir fn4(id3) then bb16

bb11:
  _t8 = $call_ext src1()
  _t9 = $cmp eq _t8 _lo1
  id0 = $copy _t9
  $call_ext src8()
  _t10 = $call_ext src8()
  _lo2 = $copy _t10
  _t11 = $cmp neq _lo2 0
  $branch _t11 bb14 bb13

bb12:
  _t7 = $call_ext src5()
  _lo1 = $copy _t7
  $jump bb11

bb13:
  $call_ext snk2(_lo2)
  $jump bb8

bb14:
  _t12 = $call_dir fn3(7, 10, 0) then bb15

bb15:
  _lo2 = $copy _t12
  $jump bb13

bb16:
  _t14 = $call_dir fn4(_t13) then bb17

bb17:
  $call_ext snk7(_t14, id4)
  id0 = $copy id5
  $jump bb8

bb18:
  _t16 = $arith sub _t15 id4
  $branch _t16 bb19 bb20

bb19:
  id1 = $copy id3
  _t18 = $arith add id3 8
  id6 = $copy _t18
  $call_dir fn4(id5) then bb21

bb2:
  id0 = $copy 9
  $jump bb1

bb20:
  id5 = $copy 5
  _t17 = $call_ext src7()
  id1 = $copy _t17
  _ret25 = $copy 5
  $jump exit

bb21:
  $jump bb22

bb22:
  $branch 5 bb23 bb24

bb23:
  _t19 = $cmp eq id3 5
  _t20 = $call_dir fn4(_t19) then bb25

bb24:
  $jump bb30

bb25:
  id4 = $copy _t20
  id7 = $copy 6
  $call_dir fn1(8) then bb26

bb26:
  id2 = $copy 6
  id4 = $copy id7
  _t21 = $call_ext src2()
  _t22 = $call_dir fn1(_t21) then bb27

bb27:
  _t23 = $call_dir fn2(id5, _t22) then bb28

bb28:
  id5 = $copy _t23
  $call_dir fn3(1, 1, 2) then bb29

bb29:
  id2 = $copy 1
  $jump bb22

bb3:
  id1 = $copy id1
  _t4 = $call_ext src6()
  _t5 = $call_dir fn3(9, _t4, id1) then bb4

bb30:
  $branch 6 bb31 bb32

bb31:
  $jump bb30

bb32:
  _ret25 = $copy id2
  $jump exit

bb4:
  id1 = $copy _t5
  $branch id0 bb6 bb7

bb5:
  _t24 = $call_ext src3()
  _ret25 = $copy _t24
  $jump exit

bb6:
  $branch id2 bb9 bb10

bb7:
  _t15 = $call_dir fn4(id6) then bb18

bb8:
  id6 = $copy id7
  $jump bb5

bb9:
  id2 = $copy id0
  _lo1 = $copy 7
  _t6 = $cmp neq _lo1 0
  $branch _t6 bb12 bb11

entry:
  _t3 = $call_ext src1()
  id0 = $copy _t3
  id0 = $copy id1
  $jump bb1

exit:
  $ret _ret25
}