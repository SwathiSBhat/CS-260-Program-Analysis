struct st {
  f1:int
  f2:&int
}

test:&() -> int

fn main() -> int {
entry:
  $ret 0
}

fn test() -> int {
let _lo1:int, _lo2:int, _lo3:int, _t10:&&st, _t11:&st, _t12:&int, _t13:int, _t14:int, _t15:&int, _t16:int, _t17:&int, _t18:int, _t19:int, _t20:&int, _t21:int, _t22:&int, _t23:int, _t24:int, _t25:&&int, _t26:&int, _t27:&&int, _t28:&int, _t29:int, _t30:&int, _t31:int, _t32:&&st, _t33:int, _t34:&&&st, _t35:&&st, _t36:int, _t37:&&int, _t38:&int, _t39:int, _t4:&&st, _t40:&int, _t41:int, _t42:&&st, _t43:&st, _t44:int, _t45:&&int, _t46:&int, _t47:int, _t48:int, _t49:&int, _t5:&st, _t50:&int, _t51:int, _t6:&int, _t7:int, _t8:int, _t9:int, id0:int, id1:&st, id10:&&&st, id11:&&int, id12:&&int, id13:&&int, id14:&st, id2:&&st, id3:&int, id4:&int, id5:int, id6:int, id7:int, id8:int, id9:&&int
bb1:
  _t43 = $load _t42
  $store _t32 _t43
  $branch _lo1 bb5 bb6


bb2:
  _lo1 = $copy 0
  $jump bb1

bb3:
  _lo1 = $copy 1
  $jump bb1

bb4:
  id0 = $copy _lo2
  $ret 0

bb5:
  _lo2 = $copy 0
  $jump bb4

bb6:
  _lo2 = $copy 1
  $jump bb3


entry:
  $branch _t7 bb2 bb3

}
