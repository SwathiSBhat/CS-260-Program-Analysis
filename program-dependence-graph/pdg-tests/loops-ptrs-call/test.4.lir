struct st {
  f1:int
  f2:&int
}

f1:&(int, &int) -> &int
f2:&(&st, &int) -> &st
f3:&(&int, &int) -> &st
test:&() -> int

fn f1(p:int, q:&int) -> &int {
let _t1:&int, _t10:&&&(&int, &int) -> &st, _t11:&&(&int, &int) -> &st, _t12:&&st, _t13:&st, _t14:int, _t15:int, _t16:int, _t17:&int, _t18:&int, _t19:&int, _t2:&int, _t20:int, _t21:int, _t22:&int, _t23:&int, _t24:int, _t25:&&(&int, &int) -> &st, _t26:&(&int, &int) -> &st, _t27:&int, _t28:&int, _t29:int, _t3:&&int, _t30:int, _t31:&int, _t32:int, _t33:&&&int, _t34:&&int, _t35:int, _t36:&int, _t37:int, _t38:&int, _t39:&int, _t4:&&&int, _t40:int, _t41:int, _t42:int, _t43:int, _t5:&&int, _t6:&int, _t7:int, _t8:&int, _t9:&() -> int, id59:int, id60:&int, id61:&int, id62:&int, id63:&int, id64:&&int, id65:&int, id66:&int, id67:&&int, id68:&&&int, id69:&&int, id70:&&&int, id71:int, id72:&int, id73:&&int, id74:int, id75:&() -> int, id76:&&() -> int, id77:&st, id78:&&(&int, &int) -> &st, id79:&st, id80:&&st, id81:int, id82:int, id83:int, id84:&st
bb1:
  id61 = $copy _t2
  id60 = $copy id61
  _t3 = $load id70
  id69 = $copy _t3
  _t4 = $addrof id69
  id68 = $copy _t4
  _t5 = $load id68
  id67 = $copy _t5
  _t6 = $load id67
  id66 = $copy _t6
  id65 = $copy id66
  _t7 = $call_dir test() then bb2

bb10:
  _t17 = $alloc 8 [_alloc10]
  $store id73 _t17
  _t18 = $load id69
  _t19 = $addrof id74
  $call_dir f3(_t18, _t19) then bb12

bb11:
  $branch 9 bb17 bb16

bb12:
  _t20 = $call_idr id75() then bb13

bb13:
  $call_dir f1(_t20, id63) then bb14

bb14:
  _t21 = $cmp neq id67 id69
  id71 = $copy _t21
  _t22 = $load id64
  $call_dir f3(id63, _t22) then bb15

bb15:
  _t23 = $gfp id77 f1
  _t24 = $cmp gt id59 id71
  $store _t23 _t24
  $jump bb9

bb16:
  $jump bb19

bb17:
  _t25 = $gep id78 p
  _t26 = $load _t25
  f3 = $copy _t26
  _t27 = $gfp id79 f1
  _t28 = $gfp id77 f1
  _t29 = $load _t28
  $store _t27 _t29
  _t30 = $call_dir test() then bb18

bb18:
  $store id62 _t30
  q = $alloc 1 [_alloc11]
  _t31 = $gep q p
  _t32 = $load _t31
  id71 = $copy _t32
  _t33 = $gep id68 id81
  _t34 = $addrof id72
  $store _t33 _t34
  $jump bb8

bb19:
  _t35 = $call_dir test() then bb22

bb2:
  id71 = $copy _t7
  _t8 = $call_dir f1(1, id61) then bb3

bb20:
  $call_dir test() then bb23

bb21:
  $jump bb8

bb22:
  $branch _t35 bb20 bb21

bb23:
  _t36 = $load id64
  $call_dir f3(id62, _t36) then bb24

bb24:
  id62 = $copy id63
  _t37 = $cmp lte 5 3
  id82 = $copy _t37
  _t38 = $gep id63 id83
  $store _t38 6
  $store id66 10
  _t40 = $call_dir test() then bb25

bb25:
  _t39 = $gep id61 _t40
  _t41 = $call_dir test() then bb26

bb26:
  $store _t39 _t41
  $jump bb19

bb27:
  id82 = $copy _t42
  $call_dir f2(id84, id61) then bb28

bb28:
  $call_dir f1(3, id72) then bb29

bb29:
  _t43 = $cmp neq id62 id61
  id59 = $copy _t43
  $ret id65

bb3:
  id72 = $copy _t8
  id73 = $copy id64
  id76 = $copy id76
  _t9 = $load id76
  id75 = $copy _t9
  _t10 = $addrof id78
  _t11 = $load _t10
  id78 = $copy _t11
  id80 = $copy id80
  _t12 = $gep id80 9
  _t13 = $load _t12
  id79 = $copy _t13
  id81 = $copy 4
  _t14 = $call_dir test() then bb4

bb4:
  id83 = $copy _t14
  id84 = $copy id77
  _t15 = $cmp eq id60 id65
  id59 = $copy _t15
  $call_dir test() then bb5

bb5:
  $jump bb6

bb6:
  $branch id71 bb7 bb8

bb7:
  $jump bb9

bb8:
  _t42 = $call_idr id75() then bb27

bb9:
  _t16 = $cmp neq id72 id72
  $branch _t16 bb10 bb11

entry:
  id64 = $copy id64
  _t1 = $load id64
  id63 = $copy _t1
  id62 = $copy id63
  _t2 = $call_dir f1(p, id62) then bb1
}

fn f2(p:&st, q:&int) -> &st {
let _ret51:&st, _t1:int, _t10:&&int, _t11:&int, _t12:&&int, _t13:&int, _t14:int, _t15:&&int, _t16:&int, _t17:&&int, _t18:&int, _t19:int, _t2:&&int, _t20:&int, _t21:int, _t22:int, _t23:int, _t24:&&(&int, &int) -> &st, _t25:int, _t26:int, _t27:&&st, _t28:&int, _t29:&int, _t3:&int, _t30:int, _t31:int, _t32:&st, _t33:&int, _t34:&int, _t35:&st, _t36:&&int, _t37:&int, _t38:&int, _t39:int, _t4:&st, _t40:int, _t41:&&int, _t42:&int, _t43:&(&int, &int) -> &st, _t44:&int, _t45:&int, _t46:&int, _t47:int, _t48:&int, _t49:&int, _t5:&&st, _t50:&st, _t6:int, _t7:&&st, _t8:&st, _t9:&int, id100:&&int, id101:&&int, id102:&int, id103:int, id104:int, id105:&int, id106:int, id107:&st, id108:int, id109:int, id110:int, id111:&() -> int, id112:&() -> int, id113:int, id114:&&(&int, &int) -> &st, id115:&(int, &int) -> &int, id116:&&int, id85:int, id86:&&st, id87:&st, id88:&int, id89:&st, id90:&st, id91:&&st, id92:&&&st, id93:&&int, id94:&int, id95:&int, id96:&int, id97:&&int, id98:&int, id99:&&int
bb1:
  id87 = $copy _t4
  _t5 = $load id92
  id91 = $copy _t5
  _t6 = $call_dir test() then bb2

bb10:
  id85 = $copy _t26
  _t27 = $addrof id87
  id86 = $copy _t27
  _t28 = $load id93
  $call_dir f2(id90, _t28) then bb11

bb11:
  $jump bb12

bb12:
  $branch 4 bb13 bb14

bb13:
  $call_dir f2(p, id94) then bb15

bb14:
  id85 = $copy 10
  $jump bb20

bb15:
  _t30 = $call_dir test() then bb16

bb16:
  _t29 = $gep id95 _t30
  _t31 = $cmp eq id95 id96
  $store _t29 _t31
  _t32 = $call_dir f3(id98, id94) then bb17

bb17:
  _t33 = $load id99
  $call_dir f2(_t32, _t33) then bb18

bb18:
  _t34 = $addrof id103
  _t35 = $call_dir f3(_t34, id96) then bb19

bb19:
  _ret51 = $copy _t35
  $jump exit

bb2:
  _t7 = $gep id91 _t6
  _t8 = $load _t7
  id90 = $copy _t8
  _t9 = $call_dir f1(id85, q) then bb3

bb20:
  $branch id106 bb21 bb22

bb21:
  _t36 = $gfp id107 f2
  _t37 = $alloc 10 [_alloc12]
  $store _t36 _t37
  id108 = $copy 8
  _t38 = $call_dir f1(0, id95) then bb23

bb22:
  $jump bb7

bb23:
  id98 = $copy _t38
  _t39 = $call_idr id111() then bb24

bb24:
  id109 = $copy _t39
  _t40 = $cmp lt id106 10
  id113 = $copy _t40
  _t41 = $addrof id102
  _t42 = $load _t41
  _t43 = $load id114
  $call_idr _t43(id96, _t42) then bb25

bb25:
  $jump bb20

bb26:
  _t45 = $load id100
  $call_dir f3(_t44, _t45) then bb27

bb27:
  _t46 = $addrof id104
  _t47 = $load _t46
  $call_idr id115(_t47, id98) then bb28

bb28:
  id103 = $copy id109
  id116 = $copy id101
  _t48 = $call_dir f1(id109, id98) then bb29

bb29:
  q = $copy _t48
  _t49 = $addrof id110
  _t50 = $call_dir f2(id87, _t49) then bb30

bb3:
  id94 = $copy _t9
  id95 = $copy id88
  id97 = $copy id97
  _t10 = $gep id97 4
  _t11 = $load _t10
  id96 = $copy _t11
  _t12 = $gfp id90 f2
  _t13 = $load _t12
  id98 = $copy _t13
  _t14 = $call_dir test() then bb4

bb30:
  _ret51 = $copy _t50
  $jump exit

bb4:
  _t15 = $gep id100 _t14
  _t16 = $load _t15
  id102 = $copy _t16
  _t17 = $addrof id102
  id101 = $copy _t17
  id100 = $copy id101
  id99 = $copy id100
  id105 = $copy q
  _t18 = $gep id105 7
  _t19 = $load _t18
  id104 = $copy _t19
  id103 = $copy id104
  _t20 = $gep id95 id106
  _t21 = $load _t20
  id106 = $copy _t21
  id107 = $copy id107
  id108 = $copy id108
  _t22 = $call_dir test() then bb5

bb5:
  id110 = $copy _t22
  id109 = $copy id110
  id112 = $copy test
  id111 = $copy id112
  _t23 = $call_dir test() then bb6

bb6:
  id113 = $copy _t23
  _t24 = $addrof f3
  id114 = $copy _t24
  id116 = $copy id100
  $jump bb7

bb7:
  _t25 = $load q
  $branch _t25 bb8 bb9

bb8:
  _t26 = $call_dir test() then bb10

bb9:
  _t44 = $call_dir f1(id103, id96) then bb26

entry:
  _t1 = $arith mul id85 id85
  id85 = $copy _t1
  id86 = $copy id86
  id89 = $copy p
  _t2 = $gfp id89 f2
  _t3 = $load _t2
  id88 = $copy _t3
  _t4 = $call_dir f2(p, id88) then bb1

exit:
  $ret _ret51
}

fn f3(p:&int, q:&int) -> &st {
let _lo1:int, _t10:&&int, _t11:&&&int, _t12:int, _t13:&&int, _t14:&int, _t15:int, _t16:&&int, _t17:&int, _t18:&&&&st, _t19:&&&st, _t2:int, _t20:&&&&st, _t21:&&&st, _t22:&&&st, _t23:&&st, _t24:&st, _t25:&&int, _t26:&int, _t27:&int, _t28:&st, _t29:&&&int, _t3:int, _t30:int, _t31:&&&int, _t32:&&int, _t33:&&&int, _t34:&&int, _t35:&&() -> int, _t36:&() -> int, _t37:&(&int, &int) -> &st, _t38:&(&int, &int) -> &st, _t39:&&(&st, &int) -> &st, _t4:int, _t40:&(&st, &int) -> &st, _t41:int, _t42:&int, _t43:&st, _t44:&int, _t45:&&int, _t46:&int, _t47:&&int, _t48:int, _t49:&st, _t5:&&&&&int, _t50:int, _t51:&int, _t52:&int, _t53:int, _t54:int, _t55:&int, _t56:&&int, _t57:&int, _t58:&&int, _t59:&int, _t6:&&&&int, _t60:&int, _t61:int, _t62:int, _t63:&int, _t64:&int, _t65:int, _t66:&int, _t67:int, _t68:int, _t69:&int, _t7:&&&&int, _t70:&int, _t71:int, _t72:&&(&int, &int) -> &st, _t73:&(&int, &int) -> &st, _t74:&int, _t75:int, _t76:int, _t77:&int, _t78:&int, _t79:&&(int, &int) -> &int, _t8:&&&int, _t80:int, _t81:int, _t82:&&st, _t83:&st, _t84:&int, _t85:&int, _t86:&st, _t9:&&&int, id117:int, id118:&st, id119:int, id120:int, id121:&st, id122:&&int, id123:int, id124:&&&int, id125:&&&&int, id126:&&&&&int, id127:&&&int, id128:&&int, id129:&int, id130:int, id131:&int, id132:&st, id133:&int, id134:&int, id135:&st, id136:&&st, id137:&&&st, id138:&&&&st, id139:&&&st, id140:&&&st, id141:int, id142:int, id143:int, id144:&st, id145:&st, id146:&int, id147:&&int, id148:&&int, id149:&&&int, id150:&&int, id151:&() -> int, id152:&int, id153:&st, id154:&(&int, &int) -> &st, id155:&&(&int, &int) -> &st, id156:&&(&int, &int) -> &st, id157:&(int, &int) -> &int, id158:&&(int, &int) -> &int, id159:&&st, id160:&&st, id161:&(&int, &int) -> &st, id162:&(&st, &int) -> &st, id163:&&(&st, &int) -> &st
bb1:
  id117 = $copy _t2
  _t3 = $call_dir test() then bb2

bb10:
  _t44 = $addrof id120
  $call_dir f2(_t43, _t44) then bb11

bb11:
  $branch id120 bb13 bb14

bb12:
  $jump bb8

bb13:
  $call_dir test() then bb15

bb14:
  _t45 = $gfp id121 f2
  _t46 = $load id122
  $store _t45 _t46
  _t47 = $addrof id129
  _t48 = $cmp neq id128 _t47
  id123 = $copy _t48
  _t49 = $call_dir f3(id129, id133) then bb16

bb15:
  $jump bb8

bb16:
  id132 = $copy _t49
  $jump bb12

bb17:
  $branch id119 bb18 bb19

bb18:
  _t51 = $gfp id144 f1
  _t52 = $gep id146 id117
  _t53 = $load _t52
  $store _t51 _t53
  _t54 = $arith sub 7 id117
  id143 = $copy _t54
  _t55 = $call_dir f1(id142, id133) then bb20

bb19:
  _t62 = $load id133
  id141 = $copy _t62
  $jump bb24

bb2:
  id119 = $copy _t3
  _t4 = $call_dir test() then bb3

bb20:
  _t56 = $gfp id121 f2
  _t57 = $load _t56
  $call_dir f3(_t55, _t57) then bb21

bb21:
  _t58 = $gfp id145 f2
  _t59 = $load _t58
  _t60 = $load id147
  $call_dir f3(_t59, _t60) then bb22

bb22:
  _t61 = $call_dir test() then bb23

bb23:
  id119 = $copy _t61
  $jump bb17

bb24:
  $branch id143 bb25 bb26

bb25:
  $branch id141 bb28 bb27

bb26:
  _t86 = $call_idr id162(id132, id131) then bb44

bb27:
  _t66 = $gep id152 4
  _t67 = $load _t66
  id117 = $copy _t67
  _lo1 = $copy id117
  _t68 = $cmp neq _lo1 0
  $branch _t68 bb33 bb32

bb28:
  _t63 = $load id122
  $call_dir f1(3, _t63) then bb29

bb29:
  id123 = $copy 5
  $call_dir f2(id118, id131) then bb30

bb3:
  id120 = $copy _t4
  id122 = $copy id122
  _t5 = $gep id126 6
  _t6 = $load _t5
  id125 = $copy _t6
  _t7 = $gep id125 4
  _t8 = $load _t7
  id124 = $copy _t8
  _t9 = $gep id124 9
  _t10 = $load _t9
  id128 = $copy _t10
  _t11 = $addrof id128
  id127 = $copy _t11
  _t12 = $cmp eq id124 id127
  id123 = $copy _t12
  _t13 = $gfp id118 f2
  _t14 = $load _t13
  id131 = $copy _t14
  _t15 = $load id131
  id130 = $copy _t15
  _t16 = $gep id128 id130
  _t17 = $load _t16
  id129 = $copy _t17
  id132 = $copy id121
  _t18 = $addrof id139
  _t19 = $load _t18
  id140 = $copy _t19
  id139 = $copy id140
  _t20 = $addrof id139
  id138 = $copy _t20
  _t21 = $load id138
  id137 = $copy _t21
  id142 = $copy 8
  id141 = $copy id142
  _t22 = $gep id137 id141
  _t23 = $load _t22
  id136 = $copy _t23
  _t24 = $load id136
  id135 = $copy _t24
  _t25 = $gfp id135 f2
  _t26 = $load _t25
  id134 = $copy _t26
  id133 = $copy id134
  _t27 = $addrof id123
  _t28 = $call_dir f2(id118, _t27) then bb4

bb30:
  $call_idr id151() then bb31

bb31:
  _t64 = $gep id129 6
  _t65 = $load _t64
  id123 = $copy _t65
  $jump bb27

bb32:
  $branch _lo1 bb35 bb36

bb33:
  _lo1 = $copy 5
  $jump bb32

bb34:
  _t82 = $gep id159 4
  _t83 = $load _t82
  _t84 = $addrof id143
  $call_dir f2(_t83, _t84) then bb42

bb35:
  _t69 = $gfp id118 f1
  _t70 = $gfp id153 f1
  _t71 = $load _t70
  $store _t69 _t71
  _t72 = $gep id155 id120
  _t73 = $load _t72
  id154 = $copy _t73
  _t74 = $addrof id141
  $call_dir f1(4, _t74) then bb37

bb36:
  _t75 = $arith div 2 id117
  id141 = $copy _t75
  _t76 = $arith sub 1 5
  _t77 = $call_idr id157(9, id133) then bb38

bb37:
  $jump bb34

bb38:
  $call_dir f1(_t76, _t77) then bb39

bb39:
  $call_dir test() then bb40

bb4:
  id145 = $copy _t28
  id144 = $copy id145
  id146 = $copy id134
  _t29 = $addrof id150
  id149 = $copy _t29
  _t30 = $call_dir test() then bb5

bb40:
  _t78 = $load id128
  $call_dir f1(7, _t78) then bb41

bb41:
  _t79 = $addrof f1
  _t80 = $cmp neq _t79 id158
  id141 = $copy _t80
  _t81 = $load q
  id142 = $copy _t81
  $jump bb34

bb42:
  _t85 = $addrof id141
  $call_idr id161(id133, _t85) then bb43

bb43:
  $jump bb24

bb44:
  $ret _t86

bb5:
  _t31 = $gep id149 _t30
  _t32 = $load _t31
  id148 = $copy _t32
  _t33 = $addrof id148
  _t34 = $load _t33
  id147 = $copy _t34
  _t35 = $addrof test
  _t36 = $load _t35
  id151 = $copy _t36
  id152 = $copy id152
  id155 = $copy id156
  _t37 = $load id155
  id154 = $copy _t37
  id157 = $copy id157
  id160 = $copy id136
  id159 = $copy id160
  _t38 = $load id156
  id161 = $copy _t38
  _t39 = $addrof f2
  id163 = $copy _t39
  _t40 = $load id163
  id162 = $copy _t40
  $jump bb6

bb6:
  $branch 5 bb7 bb8

bb7:
  _t41 = $call_dir test() then bb9

bb8:
  id143 = $copy 6
  id122 = $alloc id130 [_alloc13]
  _t50 = $arith div 6 id119
  p = $alloc _t50 [_alloc14]
  $jump bb17

bb9:
  id117 = $copy _t41
  _t42 = $addrof id119
  _t43 = $call_dir f2(id118, _t42) then bb10

entry:
  _t2 = $call_dir test() then bb1
}

fn main() -> int {
entry:
  $ret 0
}

fn test() -> int {
let _lo1:int, _ret149:int, _t10:int, _t100:&int, _t101:int, _t102:&&int, _t103:&int, _t104:&int, _t105:int, _t106:&int, _t107:int, _t108:int, _t109:&int, _t11:&st, _t110:&int, _t111:int, _t112:&int, _t113:int, _t114:&int, _t115:&&st, _t116:&st, _t117:&int, _t118:&int, _t119:int, _t12:&int, _t120:&int, _t121:&int, _t122:int, _t123:&int, _t124:int, _t125:&&int, _t126:&&int, _t127:&int, _t128:&int, _t129:int, _t13:&st, _t130:&int, _t131:&int, _t132:&int, _t133:int, _t134:int, _t135:&&(&st, &int) -> &st, _t136:&(&st, &int) -> &st, _t137:&st, _t138:&int, _t139:&&&int, _t14:int, _t140:int, _t141:&&int, _t142:int, _t143:int, _t144:&int, _t145:&&int, _t146:int, _t147:int, _t148:int, _t15:int, _t16:&int, _t17:int, _t18:&int, _t19:&st, _t2:&&int, _t20:&&int, _t21:&int, _t22:&&int, _t23:&int, _t24:&&&(&int, &int) -> &st, _t25:&&(&int, &int) -> &st, _t26:&&&(&int, &int) -> &st, _t27:&&(&int, &int) -> &st, _t28:&(&st, &int) -> &st, _t29:&int, _t3:&int, _t30:&st, _t31:&&&st, _t32:&&st, _t33:&st, _t34:&&&&(int, &int) -> &int, _t35:&&&&(int, &int) -> &int, _t36:&&&(int, &int) -> &int, _t37:&&(int, &int) -> &int, _t38:&int, _t39:&&(int, &int) -> &int, _t4:&&int, _t40:&&(&int, &int) -> &st, _t41:&(&int, &int) -> &st, _t42:&(int, &int) -> &int, _t43:&&(&int, &int) -> &st, _t44:&(&int, &int) -> &st, _t45:&&int, _t46:&int, _t47:int, _t48:int, _t49:&&&int, _t5:&&() -> int, _t50:int, _t51:&&int, _t52:&&int, _t53:&int, _t54:int, _t55:&int, _t56:int, _t57:&&int, _t58:&int, _t59:int, _t6:&() -> int, _t60:int, _t61:int, _t62:&int, _t63:int, _t64:&int, _t65:&&int, _t66:&int, _t67:int, _t68:&&st, _t69:&st, _t7:&int, _t70:&int, _t71:&int, _t72:&int, _t73:int, _t74:&int, _t75:&&(&int, &int) -> &st, _t76:&(&int, &int) -> &st, _t77:&&int, _t78:&int, _t79:&int, _t8:int, _t80:&&int, _t81:&int, _t82:&&int, _t83:&int, _t84:&&int, _t85:&int, _t86:&&int, _t87:&int, _t88:&int, _t89:int, _t9:&int, _t90:&(int, &int) -> &int, _t91:int, _t92:&int, _t93:int, _t94:&int, _t95:&&(int, &int) -> &int, _t96:&(int, &int) -> &int, _t97:&int, _t98:&int, _t99:&&int, id0:&st, id1:&int, id10:int, id11:int, id12:&st, id13:&st, id14:&&st, id15:&&int, id16:&int, id17:int, id18:int, id19:int, id2:int, id20:&st, id21:&int, id22:&&st, id23:&&st, id24:&st, id25:&int, id26:&&int, id27:&int, id28:&&int, id29:&&int, id3:int, id30:&&(&int, &int) -> &st, id31:&&(&int, &int) -> &st, id32:&&(&int, &int) -> &st, id33:&&(&int, &int) -> &st, id34:&&&(&int, &int) -> &st, id35:&st, id36:&st, id37:&(&st, &int) -> &st, id38:&&(&st, &int) -> &st, id39:&&int, id4:&&&int, id40:&st, id41:&&st, id42:&&&st, id43:&int, id44:&&(int, &int) -> &int, id45:&&&(int, &int) -> &int, id46:&&&&(int, &int) -> &int, id47:&&&&&(int, &int) -> &int, id48:&int, id49:&&(int, &int) -> &int, id5:&&int, id50:&&int, id51:&&int, id52:&(&int, &int) -> &st, id53:&(int, &int) -> &int, id54:&(&st, &int) -> &st, id55:&(&int, &int) -> &st, id56:&(&int, &int) -> &st, id57:&&(&int, &int) -> &st, id58:&&&int, id6:&int, id7:&() -> int, id8:&&() -> int, id9:int
bb1:
  id12 = $copy _t13
  id15 = $copy id5
  _t14 = $cmp lt 3 id3
  id17 = $copy _t14
  _t15 = $call_dir test() then bb2

bb10:
  _t48 = $arith div 2 id2
  $branch _t48 bb11 bb12

bb11:
  _t49 = $addrof id5
  _t50 = $cmp eq id4 _t49
  id3 = $copy _t50
  _t51 = $gep id5 6
  _t52 = $gep id5 id3
  _t53 = $load _t52
  $store _t51 _t53
  _t54 = $call_idr id7() then bb13

bb12:
  id3 = $copy 3
  $jump bb14

bb13:
  id3 = $copy _t54
  _t55 = $gfp id12 f1
  _t56 = $load _t55
  id9 = $copy _t56
  _t57 = $gep id15 7
  _t58 = $alloc 8 [_alloc1]
  $store _t57 _t58
  $jump bb10

bb14:
  _t59 = $cmp eq id6 id16
  $branch _t59 bb15 bb16

bb15:
  $call_dir test() then bb17

bb16:
  id18 = $copy id19
  _t62 = $gfp id12 f1
  _t63 = $load _t62
  $branch _t63 bb20 bb21

bb17:
  _t60 = $call_idr id7() then bb18

bb18:
  id11 = $copy _t60
  _t61 = $arith mul id17 9
  _ret149 = $copy _t61
  $jump exit

bb19:
  _t77 = $gfp id35 f2
  _t78 = $load _t77
  _t79 = $load id29
  $call_dir f3(_t78, _t79) then bb26

bb2:
  id18 = $copy _t15
  _t16 = $gfp id20 f1
  _t17 = $load _t16
  id19 = $copy _t17
  id23 = $copy id14
  id22 = $copy id23
  _t18 = $addrof id3
  _t19 = $call_dir f3(_t18, id6) then bb3

bb20:
  id21 = $alloc 1 [_alloc2]
  _t64 = $gfp id0 f1
  $store _t64 0
  _t65 = $gep id5 8
  _t66 = $alloc 1 [_alloc3]
  $store _t65 _t66
  _t67 = $load id16
  id18 = $copy _t67
  _t68 = $gep id22 4
  _t69 = $load _t68
  _t70 = $addrof id19
  $call_dir f2(_t69, _t70) then bb22

bb21:
  $call_idr id7() then bb23

bb22:
  _t71 = $gfp id24 f1
  $store _t71 7
  $jump bb19

bb23:
  id25 = $alloc 1 [_alloc4]
  $call_dir test() then bb24

bb24:
  _t72 = $addrof id3
  _t73 = $cmp eq _t72 id27
  id2 = $copy _t73
  _t74 = $load id26
  _t75 = $gep id30 id3
  _t76 = $load _t75
  $call_idr _t76(_t74, id25) then bb25

bb25:
  _ret149 = $copy 4
  $jump exit

bb26:
  $store id22 id36
  $jump bb7

bb27:
  _t84 = $gfp id40 f2
  _t85 = $load _t84
  _t86 = $addrof id43
  _t87 = $load _t86
  $call_dir f3(_t85, _t87) then bb28

bb28:
  _t88 = $gfp id36 f1
  _t89 = $load _t88
  id2 = $copy _t89
  _t90 = $load id44
  f1 = $copy _t90
  _t91 = $call_idr id7() then bb29

bb29:
  id17 = $copy _t91
  $jump bb7

bb3:
  id24 = $copy _t19
  id26 = $copy id5
  _t20 = $gep id26 3
  _t21 = $load _t20
  id25 = $copy _t21
  id29 = $copy id29
  id28 = $copy id29
  _t22 = $gep id28 id10
  _t23 = $load _t22
  id27 = $copy _t23
  id34 = $copy id34
  _t24 = $gep id34 4
  _t25 = $load _t24
  id33 = $copy _t25
  id32 = $copy id33
  _t26 = $addrof id32
  _t27 = $load _t26
  id31 = $copy _t27
  id30 = $copy id31
  id35 = $copy id13
  id38 = $copy id38
  _t28 = $load id38
  id37 = $copy _t28
  _t29 = $addrof id3
  _t30 = $call_idr id37(id35, _t29) then bb4

bb30:
  $branch 1 bb31 bb32

bb31:
  id43 = $alloc 1 [_alloc5]
  $branch id10 bb34 bb35

bb32:
  _t101 = $cmp eq id6 id25
  $branch _t101 bb41 bb42

bb33:
  _t97 = $addrof id19
  _t98 = $call_dir f1(0, _t97) then bb38

bb34:
  _t92 = $gep id48 7
  _t93 = $call_idr id7() then bb36

bb35:
  _t94 = $addrof id2
  _t95 = $gep id49 0
  _t96 = $load _t95
  $call_idr _t96(id3, _t94) then bb37

bb36:
  $store _t92 _t93
  $jump bb33

bb37:
  $jump bb33

bb38:
  _t99 = $gep id39 6
  _t100 = $load _t99
  $call_dir f3(_t98, _t100) then bb39

bb39:
  $jump bb30

bb4:
  id36 = $copy _t30
  _t31 = $gep id42 7
  _t32 = $load _t31
  id41 = $copy _t[...(truncated)...](int, &int) -> &int, _t58:&int, _t59:int, _t6:&&&int, _t60:int, _t7:&&int, _t8:&int, _t9:int, id0:int, id1:&&int, id10:int, id11:int, id12:&int, id13:&int, id14:&st, id15:&st, id16:&&&st, id17:&&&st, id18:&&&&st, id19:&&&&st, id2:int, id20:&st, id21:int, id22:int, id23:&int, id24:&(int, &int) -> int, id25:&(int, &int) -> int, id26:&(int, &int) -> int, id27:&(int, &int) -> &int, id28:int, id29:&(int, &int) -> int, id3:&&int, id30:&st, id31:&st, id32:&(int, &int) -> int, id33:&&(int, &int) -> int, id34:&&int, id35:&(int, &int) -> int, id36:&&(int, &int) -> int, id37:&&&(int, &int) -> &int, id38:&&(int, &int) -> &int, id39:&&(int, &int) -> &int, id4:&&int, id40:&&(int, &int) -> &int, id41:&(int, &int) -> int, id5:&&&int, id6:&&&&int, id7:&&&&int, id8:&int, id9:&int
bb1:
  id8 = $copy _t8
  id11 = $copy 2
  _lo1 = $copy id11
  _t9 = $cmp neq _lo1 0
  $branch _t9 bb3 bb2

bb10:
  $branch id2 bb12 bb13

bb11:
  $call_dir f2(id14, q) then bb14

bb12:
  id3 = $copy id1
  id8 = $copy id8
  $jump bb6

bb13:
  $store id9 4
  id12 = $alloc 1 [_alloc1]
  $jump bb11

bb14:
  _t31 = $arith mul 9 4
  $branch _t31 bb16 bb17

bb15:
  $call_dir test(id28, q) then bb22

bb16:
  _t32 = $gep id16 0
  _t33 = $alloc 1 [_alloc2]
  $store _t32 _t33
  id4 = $alloc 1 [_alloc3]
  _t34 = $gfp id20 f1
  $store _t34 4
  $jump bb15

bb17:
  p = $copy id10
  _t35 = $gep id12 4
  _t36 = $load _t35
  id21 = $copy _t36
  _t37 = $gep g3 0
  _t38 = $call_idr id24(id11, id9) then bb18

bb18:
  $store _t37 _t38
  _t39 = $gep id23 p
  _t40 = $load _t39
  _t41 = $call_idr id27(id28, q) then bb19

bb19:
  $call_dir f1(_t40, _t41) then bb20

bb2:
  id10 = $copy _lo1
  _t10 = $addrof id10
  id9 = $copy _t10
  _t11 = $addrof id13
  _t12 = $load _t11
  id13 = $copy _t12
  id12 = $copy id13
  id15 = $copy id15
  id14 = $copy id15
  id19 = $copy id19
  id18 = $copy id19
  _t13 = $load id18
  id17 = $copy _t13
  id16 = $copy id17
  _t14 = $call_dir f1(9, q) then bb4

bb20:
  _t42 = $addrof id0
  $call_dir f3(id9, _t42) then bb21

bb21:
  $jump bb15

bb22:
  $jump bb23

bb23:
  _t43 = $call_idr id24(id21, id12) then bb26

bb24:
  q = $alloc 5 [_alloc4]
  id22 = $copy id10
  _t44 = $gep g3 id11
  _t45 = $load _t44
  id22 = $copy _t45
  _t46 = $gfp id30 f2
  _t47 = $load _t46
  id13 = $copy _t47
  id10 = $copy 6
  $store id8 id0
  $jump bb23

bb25:
  $jump bb6

bb26:
  $branch _t43 bb24 bb25

bb27:
  id10 = $copy _lo2
  _t50 = $call_idr id32(0, id13) then bb29

bb28:
  _lo2 = $copy 1
  $jump bb27

bb29:
  id0 = $copy _t50
  id34 = $copy id4
  _t51 = $arith sub p id0
  $store id13 _t51
  $jump bb30

bb3:
  _lo1 = $copy id0
  $jump bb2

bb30:
  $branch 3 bb31 bb32

bb31:
  $jump bb33

bb32:
  _t60 = $cmp gte 9 id22
  $ret _t60

bb33:
  _t52 = $load id23
  $branch _t52 bb34 bb35

bb34:
  _t53 = $call_idr id26(1, g3) then bb36

bb35:
  $jump bb30

bb36:
  id23 = $alloc _t53 [_alloc5]
  _t54 = $call_idr id35(6, id9) then bb37

bb37:
  id21 = $copy _t54
  _t55 = $gep q id0
  _t56 = $load _t55
  _t57 = $alloc _t56 [_alloc6]
  $store id37 _t57
  id12 = $alloc 1 [_alloc7]
  _t58 = $addrof id11
  _t59 = $call_idr id41(id11, _t58) then bb38

bb38:
  id2 = $copy _t59
  $jump bb33

bb4:
  id23 = $copy _t14
  _t15 = $load id23
  id22 = $copy _t15
  id21 = $copy id22
  id25 = $copy id26
  id24 = $copy id25
  _t16 = $addrof id27
  _t17 = $load _t16
  id27 = $copy _t17
  id29 = $copy id25
  _t18 = $addrof id0
  _t19 = $call_idr id29(2, _t18) then bb5

bb5:
  id28 = $copy _t19
  id31 = $copy id15
  id30 = $copy id31
  id33 = $copy id33
  _t20 = $load id33
  id32 = $copy _t20
  _t21 = $addrof id9
  id34 = $copy _t21
  _t22 = $addrof id24
  id36 = $copy _t22
  _t23 = $gep id36 id2
  _t24 = $load _t23
  id35 = $copy _t24
  id40 = $copy id39
  id39 = $copy id40
  id38 = $copy id39
  _t25 = $addrof id38
  id37 = $copy _t25
  id41 = $copy id32
  $jump bb6

bb6:
  _t26 = $gep q 4
  _t27 = $load _t26
  $branch _t27 bb7 bb8

bb7:
  _t28 = $call_dir test(id0, g3) then bb9

bb8:
  _t48 = $load g3
  p = $copy _t48
  _lo2 = $copy 1
  _t49 = $cmp eq _lo2 0
  $branch _t49 bb28 bb27

bb9:
  _t29 = $gep id1 5
  _t30 = $load _t29
  $call_dir test(_t28, _t30) then bb10

entry:
  id0 = $copy 8
  id1 = $copy id1
  id2 = $copy 1
  id7 = $copy id6
  _t3 = $addrof id7
  _t4 = $load _t3
  id6 = $copy _t4
  _t5 = $gep id6 10
  _t6 = $load _t5
  id5 = $copy _t6
  _t7 = $load id5
  id4 = $copy _t7
  id3 = $copy id4
  _t8 = $call_dir f1(p, q) then bb1
}