struct struct1 {
    f1:int
    f2:&int
  }

  struct struct2 {
    f1:struct1
    f2:&struct1
  }

  func1:&() -> int
  func_test_copy:&(int, &int) -> &struct2
  func3:&(int,&int,&&int,&struct2,int) -> _

  fn func1() -> int {
  entry:

    $ret 42
  }

  fn func_test_copy(p1:int, p2:&int) -> &struct2 {
  let _t1:&struct2, x:int, _t2:int, _t3:&int, _t4:int, _t5:int
  entry:
    x = $copy 10
   _t2 = $copy 2
    _t3 = $copy p2
    _t4 = $copy x
    $ret _t1
  }

  fn main() -> int {
  let x:int, y:int, z:int, a:int, b:int
  entry:
    x = $arith add 0 2
    y = $arith sub 1 2
    z = $arith mul 3 4
    a = $arith div 12 5
    b = $arith div 14 5
    $ret x
  }