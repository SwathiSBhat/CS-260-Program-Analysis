struct st {
  f1:int
  f2:&int
}

f1:&(int, &int) -> &int
f2:&(&st, &int) -> &st
f3:&(&int, &int) -> &st
g1:&st
g2:&int
g3:&int
test:&(int, &int) -> int

fn f1(p:int, q:&int) -> &int {
let _t1:&&(int, &int) -> &int, _t10:int, _t11:&int, _t2:&(int, &int) -> &int, _t3:int, _t4:&&(int, &int) -> int, _t5:&(int, &int) -> int, _t6:&&(int, &int) -> int, _t7:&(int, &int) -> int, _t8:&int, _t9:int, id32:int, id33:int, id34:&(int, &int) -> &int, id35:int, id36:&(int, &int) -> int, id37:&(int, &int) -> int, id38:&&(int, &int) -> int, id39:int, id40:&&int, id41:&&int
bb1:
  id35 = $copy _t3
  _t4 = $gep id38 id32
  _t5 = $load _t4
  id37 = $copy _t5
  _t6 = $addrof id37
  _t7 = $load _t6
  id36 = $copy _t7
  id39 = $copy p
  id40 = $copy id41
  _t8 = $gep g2 id32
  _t9 = $load _t8
  $store g2 _t9
  $call_idr id34(id35, g2) then bb2

bb2:
  _t10 = $call_idr id36(id39, g2) then bb3

bb3:
  g3 = $alloc _t10 [_alloc3]
  _t11 = $load id40
  $ret _t11

entry:
  id33 = $copy 8
  id32 = $copy id33
  _t1 = $addrof f1
  _t2 = $load _t1
  id34 = $copy _t2
  _t3 = $call_dir test(id35, g2) then bb1
}

fn f2(p:&st, q:&int) -> &st {
let _t1:&int, _t2:int, _t3:&int, _t4:int, _t5:int, _t6:&int, _t7:int, _t8:&int, _t9:int, id42:int, id43:&st, id44:int, id45:&st
entry:
  _t1 = $gfp id43 f1
  _t2 = $load _t1
  id42 = $copy _t2
  _t3 = $gfp p f1
  _t4 = $load _t3
  id44 = $copy _t4
  _t5 = $arith add 1 2
  id42 = $copy _t5
  _t6 = $gfp g1 f1
  _t7 = $load _t6
  id44 = $copy _t7
  _t8 = $gep q 6
  _t9 = $load _t8
  id44 = $copy _t9
  $ret id45
}

fn f3(p:&int, q:&int) -> &st {
let _t1:int, _t10:&int, _t11:int, _t12:int, _t13:&&&(&int, &int) -> &st, _t14:&&(&int, &int) -> &st, _t15:&&(&int, &int) -> &st, _t16:&(&int, &int) -> &st, _t17:&st, _t18:&&st, _t19:&int, _t2:&int, _t20:&int, _t21:&&(&int, &int) -> &st, _t22:&(&int, &int) -> &st, _t23:&&int, _t24:&int, _t25:&&int, _t26:int, _t27:&int, _t28:&int, _t29:&&int, _t3:&&&&int, _t30:&int, _t31:&int, _t32:int, _t33:int, _t34:&&int, _t35:&int, _t36:&int, _t37:int, _t38:&int, _t39:int, _t4:&&&int, _t40:&&int, _t41:&int, _t42:&&&int, _t43:int, _t44:&&int, _t45:int, _t46:&int, _t47:int, _t48:&int, _t49:int, _t5:&&&int, _t50:&int, _t51:int, _t52:&int, _t53:int, _t54:&int, _t55:&&int, _t56:&int, _t57:&&int, _t58:&int, _t59:&&&st, _t6:&&int, _t60:&&st, _t61:&&(&st, &int) -> &st, _t62:&int, _t63:int, _t64:&int, _t65:&&st, _t7:&int, _t8:&int, _t9:int, id46:int, id47:int, id48:int, id49:&&(&int, &int) -> &st, id50:&int, id51:int, id52:&int, id53:&&int, id54:&&&int, id55:&&&&int, id56:&&&&&int, id57:&int, id58:&&int, id59:int, id60:&int, id61:int, id62:int, id63:&(int, &int) -> int, id64:int, id65:&(&int, &int) -> &st, id66:&&int, id67:&(int, &int) -> int, id68:&st, id69:&st, id70:&(&int, &int) -> &st, id71:&&(&int, &int) -> &st, id72:&&(&int, &int) -> &st, id73:&&&(&int, &int) -> &st, id74:&&st, id75:&&st, id76:&&&st, id77:&&(&st, &int) -> &st, id78:&&&(&st, &int) -> &st, id79:&(int, &int) -> int, id80:&(int, &int) -> int, id81:&&st
bb1:
  id47 = $copy _t1
  _t2 = $call_dir f1(id47, g3) then bb2

bb10:
  _t20 = $addrof id51
  _t21 = $gep id49 id46
  _t22 = $load _t21
  $call_idr _t22(_t19, _t20) then bb11

bb11:
  id47 = $copy 6
  $jump bb12

bb12:
  $branch 7 bb13 bb14

bb13:
  g3 = $alloc 1 [_alloc4]
  _t23 = $gep id53 5
  _t24 = $load _t23
  id52 = $copy _t24
  _t25 = $addrof id57
  id53 = $copy _t25
  g2 = $alloc 6 [_alloc5]
  id53 = $copy id58
  $jump bb12

bb14:
  _t26 = $call_dir test(id46, id60) then bb15

bb15:
  id59 = $copy _t26
  _t27 = $call_dir f1(5, g3) then bb16

bb16:
  _t28 = $addrof id46
  $call_dir f3(_t27, _t28) then bb17

bb17:
  $branch id61 bb19 bb20

bb18:
  $jump bb7

bb19:
  _t29 = $gep id58 id62
  _t30 = $call_dir f1(2, g2) then bb21

bb2:
  id50 = $copy _t2
  id56 = $copy id56
  _t3 = $load id56
  id55 = $copy _t3
  _t4 = $load id55
  id54 = $copy _t4
  _t5 = $gep id54 1
  _t6 = $load _t5
  id53 = $copy _t6
  _t7 = $addrof id51
  id57 = $copy _t7
  _t8 = $addrof id51
  _t9 = $load _t8
  id59 = $copy _t9
  _t10 = $call_dir f1(0, id52) then bb3

bb20:
  _t32 = $arith sub 6 id62
  id64 = $copy _t32
  _t33 = $call_dir test(4, id50) then bb22

bb21:
  $store _t29 _t30
  _t31 = $gfp g1 f1
  $store _t31 id46
  $jump bb18

bb22:
  _t34 = $gep id58 7
  _t35 = $load _t34
  $call_dir test(_t33, _t35) then bb23

bb23:
  _t36 = $gep id52 4
  $store _t36 id48
  $jump bb18

bb24:
  _t38 = $gep id52 id64
  _t39 = $load _t38
  $branch _t39 bb25 bb26

bb25:
  _t40 = $gep id66 2
  _t41 = $load _t40
  $call_idr id65(id50, _t41) then bb27

bb26:
  _t52 = $gfp id69 f1
  $store _t52 0
  $jump bb35

bb27:
  id61 = $copy 7
  id61 = $copy id47
  $jump bb28

bb28:
  $branch id48 bb29 bb30

bb29:
  _t42 = $gep id54 9
  _t43 = $load id60
  _t44 = $alloc _t43 [_alloc6]
  $store _t42 _t44
  $jump bb28

bb3:
  id60 = $copy _t10
  _t11 = $call_dir test(id47, q) then bb4

bb30:
  _t45 = $call_idr id67(3, id52) then bb31

bb31:
  $branch _t45 bb33 bb34

bb32:
  $jump bb24

bb33:
  _t46 = $gfp id68 f1
  _t47 = $arith div id47 5
  $store _t46 _t47
  $jump bb32

bb34:
  $store g2 0
  _t48 = $gep id52 4
  _t49 = $load _t48
  id47 = $copy _t49
  _t50 = $gep id50 id64
  _t51 = $load _t50
  id47 = $copy _t51
  $jump bb32

bb35:
  $branch 9 bb36 bb37

bb36:
  _t53 = $load id60
  id46 = $copy _t53
  _t54 = $addrof id48
  _t55 = $gep id58 2
  _t56 = $load _t55
  $call_dir f3(_t54, _t56) then bb38

bb37:
  id61 = $copy id47
  id52 = $alloc 1 [_alloc7]
  $ret id69

bb38:
  _t57 = $addrof p
  _t58 = $load _t57
  $call_dir f3(q, _t58) then bb39

bb39:
  _t59 = $gep id76 id48
  _t60 = $load _t59
  id74 = $copy _t60
  _t61 = $load id78
  id77 = $copy _t61
  _t62 = $addrof id61
  _t63 = $call_dir test(id59, _t62) then bb40

bb4:
  id61 = $copy _t11
  _t12 = $call_idr id63(2, q) then bb5

bb40:
  _t64 = $addrof id51
  $call_idr id79(_t63, _t64) then bb41

bb41:
  _t65 = $gep id81 1
  $store _t65 id68
  $jump bb35

bb5:
  id62 = $copy _t12
  id64 = $copy 7
  id66 = $copy id58
  id67 = $copy test
  _t13 = $gep id73 1
  _t14 = $load _t13
  id72 = $copy _t14
  id71 = $copy id72
  _t15 = $gep id71 10
  _t16 = $load _t15
  id70 = $copy _t16
  _t17 = $call_idr id70(id57, g2) then bb6

bb6:
  id69 = $copy _t17
  id75 = $copy id74
  id74 = $copy id75
  id78 = $copy id78
  id80 = $copy id63
  id79 = $copy id80
  _t18 = $load id76
  id81 = $copy _t18
  $jump bb7

bb7:
  $branch id46 bb8 bb9

bb8:
  id47 = $copy 3
  _t19 = $call_dir f1(4, id50) then bb10

bb9:
  _t37 = $cmp gt id61 id48
  $store g2 _t37
  $jump bb24

entry:
  id48 = $copy id47
  _t1 = $call_dir test(id48, g2) then bb1
}

fn main() -> int {
let _t1:&int, _t2:int, a:int, b:&int
bb1:
  $ret _t2

entry:
  a = $copy 42
  _t1 = $addrof a
  b = $copy _t1
  _t2 = $call_dir test(a, b) then bb1
}

fn test(p:int, q:&int) -> int {
let _lo1:int, _lo2:int, _t10:int, _t11:&st, _t12:&&st, _t13:&&st, _t14:&st, _t15:&&int, _t16:&int, _t17:&&int, _t18:int, _t19:&&&&int, _t20:&&&&int, _t21:&&&int, _t22:&st, _t23:&int, _t24:int, _t25:int, _t26:&int, _t27:int, _t28:&int, _t29:int, _t3:&&&st, _t30:int, _t31:&int, _t32:&int, _t33:&int, _t34:int, _t35:&&int, _t36:&int, _t37:&&int, _t38:&int, _t39:&&int, _t4:&&&st, _t40:&int, _t41:int, _t42:&int, _t43:&int, _t44:int, _t45:&&int, _t46:&int, _t47:&int, _t48:&int, _t49:&st, _t5:&&st, _t50:&int, _t51:int, _t52:&int, _t53:&int, _t54:int, _t55:int, _t6:&st, _t7:&int, _t8:int, _t9:&int, id0:&&st, id1:&&&st, id10:&&int, id11:&&int, id12:&int, id13:&st, id14:&st, id15:&&st, id16:&st, id17:&int, id18:int, id19:&st, id2:&st, id20:&&int, id21:&&int, id22:int, id23:int, id24:&&int, id25:&&int, id26:&&int, id27:&&&int, id28:&&&&int, id29:&&&int, id3:&int, id30:&st, id31:&st, id4:int, id5:int, id6:&int, id7:int, id8:&int, id9:int
bb1:
  id3 = $copy _t7
  _t8 = $load g3
  id4 = $copy _t8
  id5 = $copy p
  id6 = $copy id6
  _t9 = $gfp g1 f1
  _t10 = $load _t9
  id7 = $copy _t10
  id8 = $copy q
  id9 = $copy 8
  id11 = $copy id10
  id10 = $copy id11
  id17 = $copy q
  _t11 = $call_dir f3(g3, id17) then bb2

bb10:
  $branch _t29 bb12 bb13

bb11:
  _t43 = $addrof id23
  id3 = $copy _t43
  _lo2 = $copy id23
  _t44 = $cmp neq _lo2 0
  $branch _t44 bb18 bb17

bb12:
  _t30 = $load id8
  id7 = $copy _t30
  _t31 = $load id10
  $call_dir test(id9, _t31) then bb14

bb13:
  _t40 = $gep id8 id5
  _t41 = $load _t40
  id5 = $copy _t41
  _t42 = $alloc 8 [_alloc2]
  $store id11 _t42
  $jump bb11

bb14:
  _t32 = $gep id12 0
  $store _t32 id9
  _t33 = $gfp id14 f1
  _t34 = $load _t33
  id8 = $alloc _t34 [_alloc1]
  _t35 = $gfp id19 f2
  _t36 = $load _t35
  $call_dir f2(id13, _t36) then bb15

bb15:
  _t37 = $gep id20 id22
  _t38 = $call_dir f1(id23, id3) then bb16

bb16:
  $store _t37 _t38
  _t39 = $load id27
  id24 = $copy _t39
  $jump bb6

bb17:
  $jump bb19

bb18:
  _lo2 = $copy id4
  $jump bb17

bb19:
  $branch _lo2 bb20 bb21

bb2:
  id16 = $copy _t11
  _t12 = $addrof id16
  id15 = $copy _t12
  id18 = $copy id7
  _t13 = $gep id15 id18
  _t14 = $load _t13
  id14 = $copy _t14
  id13 = $copy id14
  _t15 = $gfp id13 f2
  _t16 = $load _t15
  id12 = $copy _t16
  id19 = $copy id19
  _t17 = $addrof id17
  id21 = $copy _t17
  id20 = $copy id21
  _t18 = $arith sub 4 p
  id23 = $copy _t18
  id25 = $copy id26
  id24 = $copy id25
  id29 = $copy id29
  _t19 = $addrof id29
  id28 = $copy _t19
  _t20 = $gep id28 id7
  _t21 = $load _t20
  id27 = $copy _t21
  _t22 = $load id0
  $call_dir f2(_t22, g3) then bb3

bb20:
  _t45 = $gfp id30 f2
  _t46 = $load _t45
  $call_dir f3(id12, _t46) then bb22

bb21:
  id6 = $copy id8
  $jump bb4

bb22:
  _t47 = $gfp id31 f1
  $store _t47 id4
  _t48 = $addrof id23
  _t49 = $call_dir f3(_t48, q) then bb23

bb23:
  $call_dir f2(_t49, id3) then bb24

bb24:
  _t50 = $addrof p
  _t51 = $call_dir test(9, _t50) then bb25

bb25:
  id18 = $copy _t51
  id25 = $copy id21
  _t52 = $gfp id13 f1
  _t53 = $gfp id16 f1
  _t54 = $load _t53
  $store _t52 _t54
  _lo2 = $copy id23
  _t55 = $cmp neq _lo2 0
  $branch _t55 bb27 bb26

bb26:
  $jump bb19

bb27:
  _lo2 = $copy id4
  $jump bb26

bb3:
  $jump bb4

bb4:
  _t23 = $gfp id2 f1
  _t24 = $load _t23
  $branch _t24 bb5 bb6

bb5:
  _lo1 = $copy id4
  _t25 = $cmp eq _lo1 0
  $branch _t25 bb8 bb7

bb6:
  $ret 7

bb7:
  _t26 = $gep id3 5
  $store _t26 _lo1
  _t27 = $call_dir test(p, id6) then bb9

bb8:
  _lo1 = $copy 9
  $jump bb7

bb9:
  id5 = $copy _t27
  _t28 = $addrof id4
  _t29 = $call_dir test(1, _t28) then bb10

entry:
  _t3 = $addrof id0
  id1 = $copy _t3
  _t4 = $gep id1 p
  _t5 = $load _t4
  id0 = $copy _t5
  _t6 = $load id0
  id2 = $copy _t6
  _t7 = $call_dir f1(0, g2) then bb1
}